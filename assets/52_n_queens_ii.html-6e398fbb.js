const e=JSON.parse('{"key":"v-08295b97","path":"/zh/algorithm/leetcode/backtracking/52_n_queens_ii.html","title":"52, N皇后II","lang":"zh-CN","frontmatter":{"title":"52, N皇后II","icon":"discover","date":"2024-02-12T00:00:00.000Z","order":13,"sticky":true,"category":"backtracking","tag":["hard","backtracking"],"description":"一、题目描述 n皇后问题研究的是如何将n个皇后放置在n×n的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数n，返回所有不同的n皇后问题的解决方案的数量。 示例 1 输入: n = 4 输出: 2 解释: 如上图所示，4皇后问题存在两个不同的解法。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/backtracking/52_n_queens_ii.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/backtracking/52_n_queens_ii.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"52, N皇后II"}],["meta",{"property":"og:description","content":"一、题目描述 n皇后问题研究的是如何将n个皇后放置在n×n的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数n，返回所有不同的n皇后问题的解决方案的数量。 示例 1 输入: n = 4 输出: 2 解释: 如上图所示，4皇后问题存在两个不同的解法。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-02-12T04:40:55.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"hard"}],["meta",{"property":"article:tag","content":"backtracking"}],["meta",{"property":"article:published_time","content":"2024-02-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-12T04:40:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"52, N皇后II\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-12T04:40:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 回溯","slug":"方法-1-回溯","link":"#方法-1-回溯","children":[]}]}],"git":{"createdTime":1707712855000,"updatedTime":1707712855000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.19,"words":358},"filePathRelative":"zh/algorithm/leetcode/backtracking/52_n_queens_ii.md","localizedDate":"2024年2月12日","excerpt":"<h2> 一、题目描述</h2>\\n<p><code>n</code><strong>皇后问题</strong>研究的是如何将<code>n</code>个皇后放置在<code>n×n</code>的棋盘上，并且使皇后彼此之间不能相互攻击。</p>\\n<p>给你一个整数<code>n</code>，返回所有不同的<code>n</code><strong>皇后问题</strong>的解决方案的数量。</p>\\n<p><strong>示例 1</strong><br>\\n<br>\\n输入: n = 4<br>\\n输出: 2<br>\\n解释: 如上图所示，<code>4</code>皇后问题存在两个不同的解法。</p>","autoDesc":true}');export{e as data};
