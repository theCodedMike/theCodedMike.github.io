const e=JSON.parse('{"key":"v-1744508a","path":"/zh/algorithm/leetcode/hashtable/438_find_all_anagrams_in_a_string.html","title":"438, 找到字符串中所有字母异位词","lang":"zh-CN","frontmatter":{"title":"438, 找到字符串中所有字母异位词","icon":"discover","date":"2023-11-06T00:00:00.000Z","order":4,"sticky":true,"category":"hashtable","tag":["medium","hash table","string","sliding window"],"description":"一、题目描述 给定两个字符串s和p，找到s中所有p的异位词的子串，返回这些子串的起始索引。不考虑答案输出的顺序。 异位词指由相同字母重排列形成的字符串（包括相同的字符串）。 示例 1 输入: s = \\"cbaebabacd\\", p = \\"abc\\" 输出: [0, 6] 解释: 起始索引等于 0 的子串是 \\"cba\\", 它是 \\"abc\\" 的异位词。 起始索引等于 6 的子串是 \\"bac\\", 它是 \\"abc\\" 的异位词。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/hashtable/438_find_all_anagrams_in_a_string.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/hashtable/438_find_all_anagrams_in_a_string.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"438, 找到字符串中所有字母异位词"}],["meta",{"property":"og:description","content":"一、题目描述 给定两个字符串s和p，找到s中所有p的异位词的子串，返回这些子串的起始索引。不考虑答案输出的顺序。 异位词指由相同字母重排列形成的字符串（包括相同的字符串）。 示例 1 输入: s = \\"cbaebabacd\\", p = \\"abc\\" 输出: [0, 6] 解释: 起始索引等于 0 的子串是 \\"cba\\", 它是 \\"abc\\" 的异位词。 起始索引等于 6 的子串是 \\"bac\\", 它是 \\"abc\\" 的异位词。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-06T13:39:20.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"hash table"}],["meta",{"property":"article:tag","content":"string"}],["meta",{"property":"article:tag","content":"sliding window"}],["meta",{"property":"article:published_time","content":"2023-11-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-06T13:39:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"438, 找到字符串中所有字母异位词\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-06T13:39:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 滑动窗口","slug":"方法-1-滑动窗口","link":"#方法-1-滑动窗口","children":[]},{"level":3,"title":"方法 2: 优化滑动窗口","slug":"方法-2-优化滑动窗口","link":"#方法-2-优化滑动窗口","children":[]}]}],"git":{"createdTime":1699277960000,"updatedTime":1699277960000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":3.16,"words":949},"filePathRelative":"zh/algorithm/leetcode/hashtable/438_find_all_anagrams_in_a_string.md","localizedDate":"2023年11月6日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给定两个字符串<code>s</code>和<code>p</code>，找到<code>s</code>中所有<code>p</code>的<strong>异位词</strong>的子串，返回这些子串的起始索引。不考虑答案输出的顺序。</p>\\n<p><strong>异位词</strong>指由相同字母重排列形成的字符串（包括相同的字符串）。</p>\\n<p><strong>示例 1</strong><br>\\n输入: s = \\"cbaebabacd\\", p = \\"abc\\"<br>\\n输出: [0, 6]<br>\\n解释:<br>\\n起始索引等于 0 的子串是 \\"cba\\", 它是 \\"abc\\" 的异位词。<br>\\n起始索引等于 6 的子串是 \\"bac\\", 它是 \\"abc\\" 的异位词。</p>","autoDesc":true}');export{e as data};
