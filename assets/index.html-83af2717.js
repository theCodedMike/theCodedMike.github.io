const e=JSON.parse('{"key":"v-0cc5daf4","path":"/zh/algorithm/leetcode/two_pointers/","title":"双指针","lang":"zh-CN","frontmatter":{"title":"双指针","icon":"discover","date":"2023-11-25T00:00:00.000Z","dir":{"order":5},"category":"leetcode","tag":"two pointers","sticky":false,"description":"双指针 双指针技术是一种以受控的方式遍历数据集（通常是数组或列表）的技术。它包括两个指针，一个指向数据集的开头，另一个指向数据集的结尾，并根据特定条件将它们相互移动。这种技术通常用于解决涉及在数据集中搜索特定条件或模式的问题，或者需要对数据集中的不同元素进行比较的问题。 双指针技术主要用于解决具有线性时间复杂度的问题，与暴力解法相比，它可以大大提高性能。使用该技术解决的一些常见问题包括： 查找一组数据中的最大/最小值。 计算特定元素的出现次数。 查找没有重复字符的最长子串。 查找大小为k的子数组的最大和。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/two_pointers/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/two_pointers/"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"双指针"}],["meta",{"property":"og:description","content":"双指针 双指针技术是一种以受控的方式遍历数据集（通常是数组或列表）的技术。它包括两个指针，一个指向数据集的开头，另一个指向数据集的结尾，并根据特定条件将它们相互移动。这种技术通常用于解决涉及在数据集中搜索特定条件或模式的问题，或者需要对数据集中的不同元素进行比较的问题。 双指针技术主要用于解决具有线性时间复杂度的问题，与暴力解法相比，它可以大大提高性能。使用该技术解决的一些常见问题包括： 查找一组数据中的最大/最小值。 计算特定元素的出现次数。 查找没有重复字符的最长子串。 查找大小为k的子数组的最大和。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-25T17:34:26.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"two pointers"}],["meta",{"property":"article:published_time","content":"2023-11-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-25T17:34:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-25T17:34:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"双指针","slug":"双指针","link":"#双指针","children":[]},{"level":2,"title":"习题","slug":"习题","link":"#习题","children":[{"level":3,"title":"移除元素","slug":"移除元素","link":"#移除元素","children":[]},{"level":3,"title":"反转字符串","slug":"反转字符串","link":"#反转字符串","children":[]},{"level":3,"title":"替换数字","slug":"替换数字","link":"#替换数字","children":[]},{"level":3,"title":"翻转字符串里的单词","slug":"翻转字符串里的单词","link":"#翻转字符串里的单词","children":[]},{"level":3,"title":"反转链表","slug":"反转链表","link":"#反转链表","children":[]},{"level":3,"title":"删除链表的倒数第N个节点","slug":"删除链表的倒数第n个节点","link":"#删除链表的倒数第n个节点","children":[]},{"level":3,"title":"链表相交","slug":"链表相交","link":"#链表相交","children":[]},{"level":3,"title":"环形链表","slug":"环形链表","link":"#环形链表","children":[]},{"level":3,"title":"三数之和","slug":"三数之和","link":"#三数之和","children":[]},{"level":3,"title":"四数之和","slug":"四数之和","link":"#四数之和","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1700933666000,"updatedTime":1700933666000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.76,"words":528},"filePathRelative":"zh/algorithm/leetcode/two_pointers/README.md","localizedDate":"2023年11月25日","excerpt":"<h2> 双指针</h2>\\n<p>双指针技术是一种以受控的方式遍历数据集（通常是数组或列表）的技术。它包括两个指针，一个指向数据集的开头，另一个指向数据集的结尾，并根据特定条件将它们相互移动。这种技术通常用于解决涉及在数据集中搜索特定条件或模式的问题，或者需要对数据集中的不同元素进行比较的问题。</p>\\n<p>双指针技术主要用于解决具有线性时间复杂度的问题，与暴力解法相比，它可以大大提高性能。使用该技术解决的一些常见问题包括：</p>\\n<ul>\\n<li>查找一组数据中的最大/最小值。</li>\\n<li>计算特定元素的出现次数。</li>\\n<li>查找没有重复字符的最长子串。</li>\\n<li>查找大小为<code>k</code>的子数组的最大和。</li>\\n</ul>","autoDesc":true}');export{e as data};
