const e=JSON.parse(`{"key":"v-77aef5c2","path":"/algorithm/leetcode/dp/","title":"Dynamic Programming","lang":"en-US","frontmatter":{"title":"Dynamic Programming","icon":"discover","date":"2024-03-28T00:00:00.000Z","dir":{"order":10},"category":"leetcode","tag":"dynamic programming","sticky":false,"description":"Dynamic Programming What is Dynamic Programming (DP)? Dynamic Programming (DP) is a method used in mathematics and computer science to solve complex problems by breaking them down into simpler subproblems. By solving each subproblem only once and storing the results, it avoids redundant computations, leading to more efficient solutions for a wide range of problems.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/dp/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/dp/"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"Dynamic Programming"}],["meta",{"property":"og:description","content":"Dynamic Programming What is Dynamic Programming (DP)? Dynamic Programming (DP) is a method used in mathematics and computer science to solve complex problems by breaking them down into simpler subproblems. By solving each subproblem only once and storing the results, it avoids redundant computations, leading to more efficient solutions for a wide range of problems."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-07T08:25:32.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"dynamic programming"}],["meta",{"property":"article:published_time","content":"2024-03-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-07T08:25:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dynamic Programming\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-07T08:25:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"Dynamic Programming","slug":"dynamic-programming","link":"#dynamic-programming","children":[{"level":3,"title":"What is Dynamic Programming (DP)?","slug":"what-is-dynamic-programming-dp","link":"#what-is-dynamic-programming-dp","children":[]},{"level":3,"title":"How Does Dynamic Programming (DP) Work?","slug":"how-does-dynamic-programming-dp-work","link":"#how-does-dynamic-programming-dp-work","children":[]},{"level":3,"title":"When to Use Dynamic Programming (DP)?","slug":"when-to-use-dynamic-programming-dp","link":"#when-to-use-dynamic-programming-dp","children":[]}]},{"level":2,"title":"Exercise","slug":"exercise","link":"#exercise","children":[{"level":3,"title":"Fundamental Problems","slug":"fundamental-problems","link":"#fundamental-problems","children":[]},{"level":3,"title":"Matrix","slug":"matrix","link":"#matrix","children":[]},{"level":3,"title":"Knapsack Problem","slug":"knapsack-problem","link":"#knapsack-problem","children":[]},{"level":3,"title":"Knapsack Problem","slug":"knapsack-problem-1","link":"#knapsack-problem-1","children":[]},{"level":3,"title":"House Robber","slug":"house-robber","link":"#house-robber","children":[]},{"level":3,"title":"Buy and Sell Stock","slug":"buy-and-sell-stock","link":"#buy-and-sell-stock","children":[]},{"level":3,"title":"Subsequence","slug":"subsequence","link":"#subsequence","children":[]},{"level":3,"title":"Subsequence","slug":"subsequence-1","link":"#subsequence-1","children":[]},{"level":3,"title":"Edit Distance","slug":"edit-distance","link":"#edit-distance","children":[]},{"level":3,"title":"Palindrome","slug":"palindrome","link":"#palindrome","children":[]},{"level":3,"title":"Other","slug":"other","link":"#other","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1712478332000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":8}]},"readingTime":{"minutes":1.64,"words":493},"filePathRelative":"algorithm/leetcode/dp/README.md","localizedDate":"March 28, 2024","excerpt":"<h2> Dynamic Programming</h2>\\n<h3> What is Dynamic Programming (DP)?</h3>\\n<p><strong>Dynamic Programming (DP)</strong> is a method used in mathematics and computer science to solve complex problems by breaking them down into simpler subproblems. By solving each subproblem only once and storing the results, it avoids redundant computations, leading to more efficient solutions for a wide range of problems.</p>","autoDesc":true}`);export{e as data};
