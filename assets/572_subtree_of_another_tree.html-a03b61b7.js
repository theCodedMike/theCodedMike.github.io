const e=JSON.parse(`{"key":"v-0d85c5fb","path":"/algorithm/leetcode/binary_tree/572_subtree_of_another_tree.html","title":"572, Subtree of Another Tree","lang":"en-US","frontmatter":{"title":"572, Subtree of Another Tree","icon":"discover","date":"2024-01-23T00:00:00.000Z","order":40,"sticky":true,"category":"binary tree","tag":["easy","binary tree","depth first search","string matching","hash function"],"description":"I Problem Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise. A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/572_subtree_of_another_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/572_subtree_of_another_tree.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"572, Subtree of Another Tree"}],["meta",{"property":"og:description","content":"I Problem Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise. A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T09:24:40.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"string matching"}],["meta",{"property":"article:tag","content":"hash function"}],["meta",{"property":"article:published_time","content":"2024-01-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-24T09:24:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"572, Subtree of Another Tree\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-24T09:24:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: DFS for Matching","slug":"approach-1-dfs-for-matching","link":"#approach-1-dfs-for-matching","children":[]},{"level":3,"title":"Approach 2: DFS for KMP Matching","slug":"approach-2-dfs-for-kmp-matching","link":"#approach-2-dfs-for-kmp-matching","children":[]}]}],"git":{"createdTime":1706088280000,"updatedTime":1706088280000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"algorithm/leetcode/binary_tree/572_subtree_of_another_tree.md","localizedDate":"January 23, 2024","excerpt":"<h2> I Problem</h2>\\n<p>Given the roots of two binary trees <code>root</code> and <code>subRoot</code>, return <code>true</code> if there is a subtree of <code>root</code> with the same structure and node values of <code>subRoot</code> and <code>false</code> otherwise.</p>\\n<p>A subtree of a binary <code>tree</code> tree is a tree that consists of a node in <code>tree</code> and all of this node's descendants. The tree <code>tree</code> could also be considered as a subtree of itself.</p>","autoDesc":true}`);export{e as data};
