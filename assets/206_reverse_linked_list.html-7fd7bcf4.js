import{_ as l,a as p}from"./2_nodes_linked_list_206-eaf213cd.js";import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as u,o as r,c as k,d as c,w as a,e as d,a as n,b as s}from"./app-22f82ee8.js";const m={},v=d('<h2 id="i-problem" tabindex="-1"><a class="header-anchor" href="#i-problem" aria-hidden="true">#</a> I Problem</h2><p>Given the head of a singly linked list, reverse the list, and return the reversed list.</p><p><strong>Example 1</strong><br><img src="'+l+'" alt="5_nodes" loading="lazy"><br> Input: head = [1, 2, 3, 4, 5]<br> Output: [5, 4, 3, 2, 1]</p><p><strong>Example 2</strong><br><img src="'+p+'" alt="2_nodes" loading="lazy"><br> Input: head = [1, 2]<br> Output: [2, 1]</p><p><strong>Example 3</strong><br> Input: head = []<br> Output: []</p><p><strong>Constraints</strong></p><ul><li>The number of nodes in the list is the range [0, 5000]</li><li>-5000 &lt;= Node.val &lt;= 5000</li></ul><p><strong>Follow up</strong><br> A linked list can be reversed either iteratively or recursively. Could you implement both?</p><p><strong>Related Topics</strong></p><ul><li>Linked List</li><li>Recursion</li></ul><h2 id="ii-solution" tabindex="-1"><a class="header-anchor" href="#ii-solution" aria-hidden="true">#</a> II Solution</h2><h3 id="approach-1-iteration" tabindex="-1"><a class="header-anchor" href="#approach-1-iteration" aria-hidden="true">#</a> Approach 1: Iteration</h3>',12),b=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"ListNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"pub"),s(" val"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"pub"),s(" next"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"reverse_list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" head"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" new_head "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" head "),n("span",{class:"token punctuation"},"{"),s(`
        head `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        node`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" new_head"),n("span",{class:"token punctuation"},";"),s(`
        new_head `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    new_head
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
     `),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},";"),s(`
     `),n("span",{class:"token class-name"},"ListNode"),s(" next"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"reverseList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"ListNode"),s(" newHead "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ListNode"),s(" curr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("head "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        curr `),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        head `),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
        curr`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" newHead"),n("span",{class:"token punctuation"},";"),s(`
        newHead `),n("span",{class:"token operator"},"="),s(" curr"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" newHead"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("h3",{id:"approach-2-recursion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#approach-2-recursion","aria-hidden":"true"},"#"),s(" Approach 2: Recursion")],-1),y=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"ListNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"pub"),s(" val"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"pub"),s(" next"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"reverse_list"),n("span",{class:"token punctuation"},"("),s("head"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"RECURSION_HELPER"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"fn"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("prev"),n("span",{class:"token punctuation"},","),s(" curr"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(),n("span",{class:"token keyword"},"match"),s(" curr "),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"None"),s(),n("span",{class:"token operator"},"=>"),s(" prev"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" curr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"let"),s(" next "),n("span",{class:"token operator"},"="),s(" curr"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            curr`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token constant"},"RECURSION_HELPER"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("curr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" next"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token constant"},"RECURSION_HELPER"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(" head"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
     `),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},";"),s(`
     `),n("span",{class:"token class-name"},"ListNode"),s(" next"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token class-name"},"BiFunction"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},">")]),s(" recursionHelper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},","),s(" curr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("curr "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"ListNode"),s(" next "),n("span",{class:"token operator"},"="),s(" curr"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
    curr`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("recursionHelper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"apply"),n("span",{class:"token punctuation"},"("),s("curr"),n("span",{class:"token punctuation"},","),s(" next"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"reverseList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" recursionHelper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"apply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" head"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function x(N,g){const o=u("CodeTabs");return r(),k("div",null,[v,c(o,{id:"54",data:[{id:"Rust"},{id:"Java"}]},{title0:a(({value:e,isActive:t})=>[s("Rust")]),title1:a(({value:e,isActive:t})=>[s("Java")]),tab0:a(({value:e,isActive:t})=>[b]),tab1:a(({value:e,isActive:t})=>[h]),_:1}),w,c(o,{id:"65",data:[{id:"Rust"},{id:"Java"}]},{title0:a(({value:e,isActive:t})=>[s("Rust")]),title1:a(({value:e,isActive:t})=>[s("Java")]),tab0:a(({value:e,isActive:t})=>[y]),tab1:a(({value:e,isActive:t})=>[_]),_:1})])}const O=i(m,[["render",x],["__file","206_reverse_linked_list.html.vue"]]);export{O as default};
