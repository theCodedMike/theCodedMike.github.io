const e=JSON.parse('{"key":"v-c62ad4e2","path":"/zh/algorithm/leetcode/greedy/968_binary_tree_cameras.html","title":"968, 监控二叉树","lang":"zh-CN","frontmatter":{"title":"968, 监控二叉树","icon":"discover","date":"2024-03-26T00:00:00.000Z","order":18,"sticky":true,"category":"greedy","tag":["hard","binary tree","depth first search","dynamic programming"],"description":"一、题目描述 给定一个二叉树，我们在树的节点上安装摄像头。 节点上的每个摄影头都可以监视其父对象、自身及其直接子对象。 计算监控树的所有节点所需的最小摄像头数量。 示例 1 输入: root = [0, 0, null, 0, 0] 输出: 1 解释: 如图所示，一台摄像头足以监控所有节点。 示例 2 输入: root = [0, 0, null, 0, null, 0, null, null, 0] 输出: 2 解释: 需要至少两个摄像头来监视树的所有节点。上图显示了摄像头放置的有效位置之一。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/greedy/968_binary_tree_cameras.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/greedy/968_binary_tree_cameras.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"968, 监控二叉树"}],["meta",{"property":"og:description","content":"一、题目描述 给定一个二叉树，我们在树的节点上安装摄像头。 节点上的每个摄影头都可以监视其父对象、自身及其直接子对象。 计算监控树的所有节点所需的最小摄像头数量。 示例 1 输入: root = [0, 0, null, 0, 0] 输出: 1 解释: 如图所示，一台摄像头足以监控所有节点。 示例 2 输入: root = [0, 0, null, 0, null, 0, null, null, 0] 输出: 2 解释: 需要至少两个摄像头来监视树的所有节点。上图显示了摄像头放置的有效位置之一。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-26T15:28:57.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"hard"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"dynamic programming"}],["meta",{"property":"article:published_time","content":"2024-03-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T15:28:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"968, 监控二叉树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T15:28:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 动态规划","slug":"方法-1-动态规划","link":"#方法-1-动态规划","children":[]},{"level":3,"title":"方法 2: 贪心","slug":"方法-2-贪心","link":"#方法-2-贪心","children":[]}]}],"git":{"createdTime":1711466937000,"updatedTime":1711466937000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":3.71,"words":1114},"filePathRelative":"zh/algorithm/leetcode/greedy/968_binary_tree_cameras.md","localizedDate":"2024年3月26日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给定一个二叉树，我们在树的节点上安装摄像头。</p>\\n<p>节点上的每个摄影头都可以监视<strong>其父对象、自身及其直接子对象</strong>。</p>\\n<p>计算监控树的所有节点所需的最小摄像头数量。</p>\\n<p><strong>示例 1</strong><br>\\n<br>\\n输入: root = [0, 0, null, 0, 0]<br>\\n输出: 1<br>\\n解释: 如图所示，一台摄像头足以监控所有节点。</p>\\n<p><strong>示例 2</strong><br>\\n<br>\\n输入: root = [0, 0, null, 0, null, 0, null, null, 0]<br>\\n输出: 2<br>\\n解释: 需要至少两个摄像头来监视树的所有节点。上图显示了摄像头放置的有效位置之一。</p>","autoDesc":true}');export{e as data};
