const e=JSON.parse(`{"key":"v-f17214a8","path":"/algorithm/leetcode/binary_tree/104_maximum_depth_of_binary_tree.html","title":"104, Maximum Depth of Binary Tree","lang":"en-US","frontmatter":{"title":"104, Maximum Depth of Binary Tree","icon":"discover","date":"2023-12-21T00:00:00.000Z","order":13,"sticky":true,"category":"binary tree","tag":["easy","binary tree","depth first search","breadth first search"],"description":"I Problem Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. Example 1 Input: root = [3, 9, 20, null, null, 15, 7] Output: 3","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/104_maximum_depth_of_binary_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/104_maximum_depth_of_binary_tree.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"104, Maximum Depth of Binary Tree"}],["meta",{"property":"og:description","content":"I Problem Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. Example 1 Input: root = [3, 9, 20, null, null, 15, 7] Output: 3"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-21T11:56:30.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"breadth first search"}],["meta",{"property":"article:published_time","content":"2023-12-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-21T11:56:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"104, Maximum Depth of Binary Tree\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-21T11:56:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Depth-First Search","slug":"approach-1-depth-first-search","link":"#approach-1-depth-first-search","children":[]},{"level":3,"title":"Approach 2: Breadth-First Search","slug":"approach-2-breadth-first-search","link":"#approach-2-breadth-first-search","children":[]}]}],"git":{"createdTime":1703159790000,"updatedTime":1703159790000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.74,"words":522},"filePathRelative":"algorithm/leetcode/binary_tree/104_maximum_depth_of_binary_tree.md","localizedDate":"December 21, 2023","excerpt":"<h2> I Problem</h2>\\n<p>Given the <code>root</code> of a binary tree, return <em>its maximum depth</em>.</p>\\n<p>A binary tree's <strong>maximum depth</strong> is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\\n<p><strong>Example 1</strong><br>\\n<br>\\nInput: root = [3, 9, 20, null, null, 15, 7]<br>\\nOutput: 3</p>","autoDesc":true}`);export{e as data};
