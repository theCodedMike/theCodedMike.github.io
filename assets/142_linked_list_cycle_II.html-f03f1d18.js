const e=JSON.parse(`{"key":"v-f8d4b304","path":"/algorithm/leetcode/linkedlist/142_linked_list_cycle_II.html","title":"142, Linked List Cycle II","lang":"en-US","frontmatter":{"title":"142, Linked List Cycle II","icon":"discover","date":"2023-10-27T00:00:00.000Z","order":8,"sticky":true,"category":"linkedlist","tag":["medium","hash table","linked list","two pointers"],"description":"I Problem Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/linkedlist/142_linked_list_cycle_II.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/linkedlist/142_linked_list_cycle_II.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"142, Linked List Cycle II"}],["meta",{"property":"og:description","content":"I Problem Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:21:34.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"hash table"}],["meta",{"property":"article:tag","content":"linked list"}],["meta",{"property":"article:tag","content":"two pointers"}],["meta",{"property":"article:published_time","content":"2023-10-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:21:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"142, Linked List Cycle II\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T11:21:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Use Hash Collections","slug":"approach-1-use-hash-collections","link":"#approach-1-use-hash-collections","children":[]},{"level":3,"title":"Approach 2: Two Pointers","slug":"approach-2-two-pointers","link":"#approach-2-two-pointers","children":[]}]}],"git":{"createdTime":1698405694000,"updatedTime":1698405694000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.65,"words":494},"filePathRelative":"algorithm/leetcode/linkedlist/142_linked_list_cycle_II.md","localizedDate":"October 27, 2023","excerpt":"<h2> I Problem</h2>\\n<p>Given the <code>head</code> of a linked list, return <em>the node where the cycle begins. If there is no cycle, return <code>null</code></em>.</p>\\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer.<br>\\nInternally, <code>pos</code> is used to denote the index of the node that tail's <code>next</code> pointer is connected to (<strong>0-indexed</strong>). It is <code>-1</code> if there is no cycle.<br>\\n<strong>Note that <code>pos</code> is not passed as a parameter</strong>.</p>","autoDesc":true}`);export{e as data};
