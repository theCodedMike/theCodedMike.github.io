const e=JSON.parse('{"key":"v-b71e55ae","path":"/zh/algorithm/leetcode/hashtable/15_three_sum.html","title":"15, 三数之和","lang":"zh-CN","frontmatter":{"title":"15, 三数之和","icon":"discover","date":"2023-11-11T00:00:00.000Z","order":9,"sticky":true,"category":"hashtable","tag":["medium","array","two pointers","sorting"],"description":"一、题目描述 给你一个整数数组nums，判断是否存在三元组[nums[i], nums[j], nums[k]]满足i != j、i != k 且 j != k，同时还满足nums[i] + nums[j] + nums[k] == 0。请你返回所有和为0且不重复的三元组。 注意：答案中不可以包含重复的三元组。 示例 1 输入: nums = [-1, 0, 1, 2, -1, -4] 输出: [[-1, -1, 2], [-1, 0, 1]] 解释: nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0。 nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0。 nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0。 不同的三元组是[-1, 0, 1] 和 [-1, -1, 2]。 注意，输出的顺序和三元组的顺序并不重要。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/hashtable/15_three_sum.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/hashtable/15_three_sum.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"15, 三数之和"}],["meta",{"property":"og:description","content":"一、题目描述 给你一个整数数组nums，判断是否存在三元组[nums[i], nums[j], nums[k]]满足i != j、i != k 且 j != k，同时还满足nums[i] + nums[j] + nums[k] == 0。请你返回所有和为0且不重复的三元组。 注意：答案中不可以包含重复的三元组。 示例 1 输入: nums = [-1, 0, 1, 2, -1, -4] 输出: [[-1, -1, 2], [-1, 0, 1]] 解释: nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0。 nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0。 nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0。 不同的三元组是[-1, 0, 1] 和 [-1, -1, 2]。 注意，输出的顺序和三元组的顺序并不重要。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-13T15:39:00.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:tag","content":"two pointers"}],["meta",{"property":"article:tag","content":"sorting"}],["meta",{"property":"article:published_time","content":"2023-11-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-13T15:39:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"15, 三数之和\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-13T15:39:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 暴力解法","slug":"方法-1-暴力解法","link":"#方法-1-暴力解法","children":[]},{"level":3,"title":"方法 2: 排序 + 双指针","slug":"方法-2-排序-双指针","link":"#方法-2-排序-双指针","children":[]}]}],"git":{"createdTime":1699719079000,"updatedTime":1699889940000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":2}]},"readingTime":{"minutes":2.25,"words":676},"filePathRelative":"zh/algorithm/leetcode/hashtable/15_three_sum.md","localizedDate":"2023年11月11日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给你一个整数数组<code>nums</code>，判断是否存在三元组<code>[nums[i], nums[j], nums[k]]</code>满足<code>i != j、i != k 且 j != k</code>，同时还满足<code>nums[i] + nums[j] + nums[k] == 0</code>。请你返回所有和为<code>0</code>且不重复的三元组。</p>\\n<p><strong>注意</strong>：答案中不可以包含重复的三元组。</p>\\n<p><strong>示例 1</strong><br>\\n输入: nums = [-1, 0, 1, 2, -1, -4]<br>\\n输出: [[-1, -1, 2], [-1, 0, 1]]<br>\\n解释:<br>\\nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0。<br>\\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0。<br>\\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0。<br>\\n不同的三元组是[-1, 0, 1] 和 [-1, -1, 2]。<br>\\n注意，输出的顺序和三元组的顺序并不重要。</p>","autoDesc":true}');export{e as data};
