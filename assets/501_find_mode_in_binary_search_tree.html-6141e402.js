const e=JSON.parse(`{"key":"v-9107ccca","path":"/algorithm/leetcode/binary_tree/501_find_mode_in_binary_search_tree.html","title":"501, Find Mode in Binary Search Tree","lang":"en-US","frontmatter":{"title":"501, Find Mode in Binary Search Tree","icon":"discover","date":"2024-01-10T00:00:00.000Z","order":30,"sticky":true,"category":"binary tree","tag":["easy","binary tree","depth first search","binary search tree"],"description":"I Problem Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it. If the tree has more than one mode, return them in any order.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/501_find_mode_in_binary_search_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/501_find_mode_in_binary_search_tree.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"501, Find Mode in Binary Search Tree"}],["meta",{"property":"og:description","content":"I Problem Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it. If the tree has more than one mode, return them in any order."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://thecodedmike.github.io/"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-11T00:53:56.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"501, Find Mode in Binary Search Tree"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"binary search tree"}],["meta",{"property":"article:published_time","content":"2024-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-11T00:53:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"501, Find Mode in Binary Search Tree\\",\\"image\\":[\\"https://thecodedmike.github.io/\\"],\\"datePublished\\":\\"2024-01-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-11T00:53:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Count Frequency With Hash Map","slug":"approach-1-count-frequency-with-hash-map","link":"#approach-1-count-frequency-with-hash-map","children":[]},{"level":3,"title":"Approach 2: In-order Traversal","slug":"approach-2-in-order-traversal","link":"#approach-2-in-order-traversal","children":[]},{"level":3,"title":"Approach 3: Morris In-order Traversal","slug":"approach-3-morris-in-order-traversal","link":"#approach-3-morris-in-order-traversal","children":[]}]}],"git":{"createdTime":1704934436000,"updatedTime":1704934436000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":5.42,"words":1626},"filePathRelative":"algorithm/leetcode/binary_tree/501_find_mode_in_binary_search_tree.md","localizedDate":"January 10, 2024","excerpt":"<h2> I Problem</h2>\\n<p>Given the <code>root</code> of a binary search tree (BST) with duplicates, return <em>all the <a href=\\"https://en.wikipedia.org/wiki/Mode_(statistics)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">mode(s)</a> (i.e., the most frequently occurred element) in it</em>.</p>\\n<p>If the tree has more than one mode, return them in <strong>any order</strong>.</p>","autoDesc":true}`);export{e as data};
