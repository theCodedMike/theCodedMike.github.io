const e=JSON.parse(`{"key":"v-347c0677","path":"/algorithm/leetcode/linkedlist/","title":"LinkedList","lang":"en-US","frontmatter":{"title":"LinkedList","icon":"discover","date":"2023-10-20T00:00:00.000Z","dir":{"order":2},"category":"leetcode","tag":"linkedlist","sticky":false,"description":"About Linked List Linked list is a linear structure linked together by a series of pointers, with each node consisting of two parts, a data field and a pointer field. Type of Linked List singly linked list doubly linked list circular singly linked list circular doubly linked list","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/linkedlist/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/linkedlist/"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"LinkedList"}],["meta",{"property":"og:description","content":"About Linked List Linked list is a linear structure linked together by a series of pointers, with each node consisting of two parts, a data field and a pointer field. Type of Linked List singly linked list doubly linked list circular singly linked list circular doubly linked list"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-21T20:00:43.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"linkedlist"}],["meta",{"property":"article:published_time","content":"2023-10-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-21T20:00:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LinkedList\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-21T20:00:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"About Linked List","slug":"about-linked-list","link":"#about-linked-list","children":[{"level":3,"title":"Type of Linked List","slug":"type-of-linked-list","link":"#type-of-linked-list","children":[]},{"level":3,"title":"Linked List Memory Allocation","slug":"linked-list-memory-allocation","link":"#linked-list-memory-allocation","children":[]},{"level":3,"title":"Operation of LinkedList","slug":"operation-of-linkedlist","link":"#operation-of-linkedlist","children":[]}]},{"level":2,"title":"Exercise","slug":"exercise","link":"#exercise","children":[{"level":3,"title":"Remove Linked List Elements","slug":"remove-linked-list-elements","link":"#remove-linked-list-elements","children":[]},{"level":3,"title":"Design Linked List","slug":"design-linked-list","link":"#design-linked-list","children":[]},{"level":3,"title":"Reverse Linked List","slug":"reverse-linked-list","link":"#reverse-linked-list","children":[]},{"level":3,"title":"Swap Nodes in Pairs","slug":"swap-nodes-in-pairs","link":"#swap-nodes-in-pairs","children":[]},{"level":3,"title":"Remove Nth Node From End of List","slug":"remove-nth-node-from-end-of-list","link":"#remove-nth-node-from-end-of-list","children":[]},{"level":3,"title":"Intersection of Two Linked Lists","slug":"intersection-of-two-linked-lists","link":"#intersection-of-two-linked-lists","children":[]},{"level":3,"title":"Linked List Cycle","slug":"linked-list-cycle","link":"#linked-list-cycle","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1697918443000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":4}]},"readingTime":{"minutes":0.73,"words":218},"filePathRelative":"algorithm/leetcode/linkedlist/README.md","localizedDate":"October 20, 2023","excerpt":"<h2> About Linked List</h2>\\n<p>Linked list is a linear structure linked together by a series of pointers, with each node consisting of two parts, a data field and a pointer field.<br>\\n</p>\\n<h3> Type of Linked List</h3>\\n<ul>\\n<li>singly linked list<br>\\n</li>\\n<li>doubly linked list<br>\\n</li>\\n<li>circular singly linked list<br>\\n</li>\\n<li>circular doubly linked list<br>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
