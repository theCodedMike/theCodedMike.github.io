const e=JSON.parse('{"key":"v-1cc443c0","path":"/zh/algorithm/leetcode/binary_tree/617_merge_two_binary_trees.html","title":"617, 合并二叉树","lang":"zh-CN","frontmatter":{"title":"617, 合并二叉树","icon":"discover","date":"2024-01-05T00:00:00.000Z","order":26,"sticky":true,"category":"binary tree","tag":["easy","binary tree","depth first search","breadth first search"],"description":"一、题目描述 给你两棵二叉树：root1和root2。 想象一下，当你将其中一棵覆盖到另一棵之上时，两棵树上的一些节点将会重叠（而另一些不会）。你需要将这两棵树合并成一棵新二叉树。合并的规则是：如果两个节点重叠，那么将这两个节点的值相加作为合并后节点的新值；否则，不为null的节点将直接作为新二叉树的节点。 返回合并后的二叉树。 注意：合并过程必须从两个树的根节点开始。 示例 1 输入: root1 = [1, 3, 2, 5], root2 = [2, 1, 3, null, 4, null, 7] 输出: [3, 4, 5, 5, 4, null, 7]","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/617_merge_two_binary_trees.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/617_merge_two_binary_trees.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"617, 合并二叉树"}],["meta",{"property":"og:description","content":"一、题目描述 给你两棵二叉树：root1和root2。 想象一下，当你将其中一棵覆盖到另一棵之上时，两棵树上的一些节点将会重叠（而另一些不会）。你需要将这两棵树合并成一棵新二叉树。合并的规则是：如果两个节点重叠，那么将这两个节点的值相加作为合并后节点的新值；否则，不为null的节点将直接作为新二叉树的节点。 返回合并后的二叉树。 注意：合并过程必须从两个树的根节点开始。 示例 1 输入: root1 = [1, 3, 2, 5], root2 = [2, 1, 3, null, 4, null, 7] 输出: [3, 4, 5, 5, 4, null, 7]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-06T17:47:31.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"breadth first search"}],["meta",{"property":"article:published_time","content":"2024-01-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-06T17:47:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"617, 合并二叉树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-06T17:47:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 深度优先搜索","slug":"方法-1-深度优先搜索","link":"#方法-1-深度优先搜索","children":[]},{"level":3,"title":"方法 2: 广度优先搜索","slug":"方法-2-广度优先搜索","link":"#方法-2-广度优先搜索","children":[]}]}],"git":{"createdTime":1704563251000,"updatedTime":1704563251000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":5.4,"words":1620},"filePathRelative":"zh/algorithm/leetcode/binary_tree/617_merge_two_binary_trees.md","localizedDate":"2024年1月5日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给你两棵二叉树：<code>root1</code>和<code>root2</code>。</p>\\n<p>想象一下，当你将其中一棵覆盖到另一棵之上时，两棵树上的一些节点将会重叠（而另一些不会）。你需要将这两棵树合并成一棵新二叉树。合并的规则是：如果两个节点重叠，那么将这两个节点的值相加作为合并后节点的新值；否则，<strong>不为</strong><code>null</code>的节点将直接作为新二叉树的节点。</p>\\n<p>返回合并后的二叉树。</p>\\n<p><strong>注意</strong>：合并过程必须从两个树的根节点开始。</p>\\n<p><strong>示例 1</strong><br>\\n<br>\\n输入: root1 = [1, 3, 2, 5], root2 = [2, 1, 3, null, 4, null, 7]<br>\\n输出: [3, 4, 5, 5, 4, null, 7]</p>","autoDesc":true}');export{e as data};
