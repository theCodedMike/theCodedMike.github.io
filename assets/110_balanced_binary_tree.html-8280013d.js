const e=JSON.parse(`{"key":"v-602ff45e","path":"/algorithm/leetcode/binary_tree/110_balanced_binary_tree.html","title":"110, Balanced Binary Tree","lang":"en-US","frontmatter":{"title":"110, Balanced Binary Tree","icon":"discover","date":"2023-12-25T00:00:00.000Z","order":16,"sticky":true,"category":"binary tree","tag":["easy","binary tree","depth first search"],"description":"I Problem Given a binary tree, determine if it is height-balanced. Example 1 Input: root = [3, 9, 20, null, null, 15, 7] Output: true Example 2 Input: root = [1, 2, 2, 3, 3, null, null, 4, 4] Output: false","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/110_balanced_binary_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/110_balanced_binary_tree.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"110, Balanced Binary Tree"}],["meta",{"property":"og:description","content":"I Problem Given a binary tree, determine if it is height-balanced. Example 1 Input: root = [3, 9, 20, null, null, 15, 7] Output: true Example 2 Input: root = [1, 2, 2, 3, 3, null, null, 4, 4] Output: false"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T13:05:59.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:published_time","content":"2023-12-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T13:05:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"110, Balanced Binary Tree\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T13:05:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Top-down Recursion","slug":"approach-1-top-down-recursion","link":"#approach-1-top-down-recursion","children":[]},{"level":3,"title":"Approach 2: Bottom-up Recursion","slug":"approach-2-bottom-up-recursion","link":"#approach-2-bottom-up-recursion","children":[]}]}],"git":{"createdTime":1703509559000,"updatedTime":1703509559000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.69,"words":506},"filePathRelative":"algorithm/leetcode/binary_tree/110_balanced_binary_tree.md","localizedDate":"December 25, 2023","excerpt":"<h2> I Problem</h2>\\n<p>Given a binary tree, determine if it is <strong>height-balanced</strong>.</p>\\n<p><strong>Example 1</strong><br>\\n<br>\\nInput: root = [3, 9, 20, null, null, 15, 7]<br>\\nOutput: true</p>\\n<p><strong>Example 2</strong><br>\\n<br>\\nInput: root = [1, 2, 2, 3, 3, null, null, 4, 4]<br>\\nOutput: false</p>","autoDesc":true}`);export{e as data};
