const e=JSON.parse('{"key":"v-44912a43","path":"/zh/algorithm/leetcode/greedy/714_best_time_to_buy_and_sell_stock_with_transaction_fee.html","title":"714, 买卖股票的最佳时机含手续费","lang":"zh-CN","frontmatter":{"title":"714, 买卖股票的最佳时机含手续费","icon":"discover","date":"2024-03-06T00:00:00.000Z","order":7,"sticky":true,"category":"greedy","tag":["medium","greedy","array","dynamic programming"],"description":"一、题目描述 给定一个整数数组prices，其中prices[i]表示第i天的股票价格；整数fee代表了交易股票的手续费用。 你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。 返回获得利润的最大值。 注意: 这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。 示例 1 输入: prices = [1, 3, 2, 8, 4, 9], fee = 2 输出: 8 解释: 能够达到的最大利润: 在此处买入prices[0] = 1 在此处卖出prices[3] = 8 在此处买入prices[4] = 4 在此处卖出prices[5] = 9 总利润:&nbsp;((8 - 1) - 2) + ((9 - 4) - 2) = 8","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/greedy/714_best_time_to_buy_and_sell_stock_with_transaction_fee.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/greedy/714_best_time_to_buy_and_sell_stock_with_transaction_fee.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"714, 买卖股票的最佳时机含手续费"}],["meta",{"property":"og:description","content":"一、题目描述 给定一个整数数组prices，其中prices[i]表示第i天的股票价格；整数fee代表了交易股票的手续费用。 你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。 返回获得利润的最大值。 注意: 这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。 示例 1 输入: prices = [1, 3, 2, 8, 4, 9], fee = 2 输出: 8 解释: 能够达到的最大利润: 在此处买入prices[0] = 1 在此处卖出prices[3] = 8 在此处买入prices[4] = 4 在此处卖出prices[5] = 9 总利润:&nbsp;((8 - 1) - 2) + ((9 - 4) - 2) = 8"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-06T16:34:46.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"greedy"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:tag","content":"dynamic programming"}],["meta",{"property":"article:published_time","content":"2024-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-06T16:34:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"714, 买卖股票的最佳时机含手续费\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-06T16:34:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 贪心","slug":"方法-1-贪心","link":"#方法-1-贪心","children":[]},{"level":3,"title":"方法 2: 动态规划","slug":"方法-2-动态规划","link":"#方法-2-动态规划","children":[]},{"level":3,"title":"方法 3: 优化的动态规划","slug":"方法-3-优化的动态规划","link":"#方法-3-优化的动态规划","children":[]}]}],"git":{"createdTime":1709742886000,"updatedTime":1709742886000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":2.66,"words":799},"filePathRelative":"zh/algorithm/leetcode/greedy/714_best_time_to_buy_and_sell_stock_with_transaction_fee.md","localizedDate":"2024年3月6日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给定一个整数数组<code>prices</code>，其中<code>prices[i]</code>表示第<code>i</code>天的股票价格；整数<code>fee</code>代表了交易股票的手续费用。</p>\\n<p>你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。</p>\\n<p>返回获得利润的最大值。</p>\\n<p><strong>注意:</strong> 这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。</p>\\n<p><strong>示例 1</strong><br>\\n输入: prices = [1, 3, 2, 8, 4, 9], fee = 2<br>\\n输出: 8<br>\\n解释: 能够达到的最大利润:<br>\\n在此处买入<code>prices[0] = 1</code><br>\\n在此处卖出<code>prices[3] = 8</code><br>\\n在此处买入<code>prices[4] = 4</code><br>\\n在此处卖出<code>prices[5] = 9</code><br>\\n总利润:&nbsp;<code>((8 - 1) - 2) + ((9 - 4) - 2) = 8</code></p>","autoDesc":true}');export{e as data};
