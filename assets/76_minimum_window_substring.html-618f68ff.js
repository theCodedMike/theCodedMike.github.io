const t=JSON.parse(`{"key":"v-caba49a4","path":"/zh/algorithm/leetcode/array/76_minimum_window_substring.html","title":"76, 最小覆盖子串","lang":"zh-CN","frontmatter":{"title":"76, 最小覆盖子串","icon":"discover","date":"2023-10-16T00:00:00.000Z","order":13,"sticky":true,"category":"array","tag":["hard","hash table","string","sliding window"],"description":"一、题目描述 给你一个字符串s、一个字符串t。返回s中涵盖t所有字符的最小子串。如果s中不存在涵盖t所有字符的子串，则返回空字符串 \\"\\"。 注意： 对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。 如果 s 中存在这样的子串，我们保证它是唯一的答案。 示例 1 输入: s = \\"ADOBECODEBANC\\", t = \\"ABC\\" 输出: \\"BANC\\" 解释: 最小覆盖子串 \\"BANC\\" 包含来自字符串 t 的 'A'、'B' 和 'C'。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/array/76_minimum_window_substring.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/array/76_minimum_window_substring.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"76, 最小覆盖子串"}],["meta",{"property":"og:description","content":"一、题目描述 给你一个字符串s、一个字符串t。返回s中涵盖t所有字符的最小子串。如果s中不存在涵盖t所有字符的子串，则返回空字符串 \\"\\"。 注意： 对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。 如果 s 中存在这样的子串，我们保证它是唯一的答案。 示例 1 输入: s = \\"ADOBECODEBANC\\", t = \\"ABC\\" 输出: \\"BANC\\" 解释: 最小覆盖子串 \\"BANC\\" 包含来自字符串 t 的 'A'、'B' 和 'C'。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-10-16T09:19:44.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"hard"}],["meta",{"property":"article:tag","content":"hash table"}],["meta",{"property":"article:tag","content":"string"}],["meta",{"property":"article:tag","content":"sliding window"}],["meta",{"property":"article:published_time","content":"2023-10-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-16T09:19:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"76, 最小覆盖子串\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-16T09:19:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 滑动窗口","slug":"方法-1-滑动窗口","link":"#方法-1-滑动窗口","children":[]}]}],"git":{"createdTime":1697118740000,"updatedTime":1697447984000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":2}]},"readingTime":{"minutes":1.92,"words":577},"filePathRelative":"zh/algorithm/leetcode/array/76_minimum_window_substring.md","localizedDate":"2023年10月16日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给你一个字符串s、一个字符串t。返回s中涵盖t所有字符的最小子串。如果s中不存在涵盖t所有字符的子串，则返回空字符串 \\"\\"。</p>\\n<p>注意：</p>\\n<ul>\\n<li>对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。</li>\\n<li>如果 s 中存在这样的子串，我们保证它是唯一的答案。</li>\\n</ul>\\n<p><strong>示例 1</strong><br>\\n输入: s = \\"ADOBECODEBANC\\", t = \\"ABC\\"<br>\\n输出: \\"BANC\\"<br>\\n解释: 最小覆盖子串 \\"BANC\\" 包含来自字符串 t 的 'A'、'B' 和 'C'。</p>","autoDesc":true}`);export{t as data};
