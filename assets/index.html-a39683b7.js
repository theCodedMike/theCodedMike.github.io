import{_ as o,a as h}from"./two_pointers_in_linkedlist-4f563210.js";import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as n,c as _,a as e,d as l,w as r,e as s,b as t}from"./app-732f8c6f.js";const c={},u=s('<h2 id="双指针" tabindex="-1"><a class="header-anchor" href="#双指针" aria-hidden="true">#</a> 双指针</h2><p>双指针技术是一种以受控的方式遍历数据集（通常是数组或列表）的技术。它包括两个指针，一个指向数据集的开头，另一个指向数据集的结尾，并根据特定条件将它们相互移动。这种技术通常用于解决涉及在数据集中搜索特定条件或模式的问题，或者需要对数据集中的不同元素进行比较的问题。</p><p>双指针技术主要用于解决具有线性时间复杂度的问题，与暴力解法相比，它可以大大提高性能。使用该技术解决的一些常见问题包括：</p><ul><li>查找一组数据中的最大/最小值。</li><li>计算特定元素的出现次数。</li><li>查找没有重复字符的最长子串。</li><li>查找大小为<code>k</code>的子数组的最大和。</li></ul><p>总的来说，双指针技术是解决特定类型问题的有用方法，这些问题涉及以可控方式迭代数据集，如模式匹配、数据分析和统计。它可以对数据集进行高效、可控的迭代，从而提高性能和结果的准确性。</p><p><img src="'+o+'" alt="two pointers" loading="lazy"><br><img src="'+h+'" alt="two pointers" loading="lazy"></p><h2 id="习题" tabindex="-1"><a class="header-anchor" href="#习题" aria-hidden="true">#</a> 习题</h2><h3 id="移除元素" tabindex="-1"><a class="header-anchor" href="#移除元素" aria-hidden="true">#</a> 移除元素</h3>',8),m=e("br",null,null,-1),f=e("br",null,null,-1),p=e("br",null,null,-1),b=e("br",null,null,-1),g=e("h3",{id:"反转字符串",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#反转字符串","aria-hidden":"true"},"#"),t(" 反转字符串")],-1),x=e("h3",{id:"替换数字",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#替换数字","aria-hidden":"true"},"#"),t(" 替换数字")],-1),z=e("h3",{id:"翻转字符串里的单词",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#翻转字符串里的单词","aria-hidden":"true"},"#"),t(" 翻转字符串里的单词")],-1),k=e("h3",{id:"反转链表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#反转链表","aria-hidden":"true"},"#"),t(" 反转链表")],-1),y=e("h3",{id:"删除链表的倒数第n个节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#删除链表的倒数第n个节点","aria-hidden":"true"},"#"),t(" 删除链表的倒数第N个节点")],-1),v=e("h3",{id:"链表相交",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表相交","aria-hidden":"true"},"#"),t(" 链表相交")],-1),w=e("h3",{id:"环形链表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#环形链表","aria-hidden":"true"},"#"),t(" 环形链表")],-1),N=e("br",null,null,-1),I=e("h3",{id:"三数之和",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#三数之和","aria-hidden":"true"},"#"),t(" 三数之和")],-1),V=e("br",null,null,-1),B=e("h3",{id:"四数之和",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#四数之和","aria-hidden":"true"},"#"),t(" 四数之和")],-1),C=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),t(" 总结")],-1);function L(R,q){const a=i("RouterLink");return n(),_("div",null,[u,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/array/27_remove_element.html"},{default:r(()=>[t("27: 移除元素")]),_:1}),m,l(a,{to:"/zh/algorithm/leetcode/array/26_remove_duplicates_from_sorted_array.html"},{default:r(()=>[t("26: 删除有序数组中的重复项")]),_:1}),f,l(a,{to:"/zh/algorithm/leetcode/array/283_move_zeroes.html"},{default:r(()=>[t("283: 移动零")]),_:1}),p,l(a,{to:"/zh/algorithm/leetcode/array/844_backspace_string_compare.html"},{default:r(()=>[t("844: 比较含退格的字符串")]),_:1}),b,l(a,{to:"/zh/algorithm/leetcode/array/977_squares_of_a_sorted_array.html"},{default:r(()=>[t("977: 有序数组的平方")]),_:1})]),g,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/string/344_reverse_string.html"},{default:r(()=>[t("344: 反转字符串")]),_:1})]),x,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/string/kamacoder_54_replace_numbers.html"},{default:r(()=>[t("卡码网54: 替换数字")]),_:1})]),z,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/string/151_reverse_words_in_a_string.html"},{default:r(()=>[t("151: 翻转字符串里的单词")]),_:1})]),k,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/linkedlist/206_reverse_linked_list.html"},{default:r(()=>[t("206: 反转链表")]),_:1})]),y,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/linkedlist/19_remove_nth_node_from_end_of_list.html"},{default:r(()=>[t("19: 删除链表的倒数第N个节点")]),_:1})]),v,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/linkedlist/160_intersection_of_two_linked_lists.html"},{default:r(()=>[t("160: 链表相交")]),_:1})]),w,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/linkedlist/141_linked_list_cycle.html"},{default:r(()=>[t("141: 环形链表")]),_:1}),N,l(a,{to:"/zh/algorithm/leetcode/linkedlist/142_linked_list_cycle_II.html"},{default:r(()=>[t("142: 环形链表II")]),_:1})]),I,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/hashtable/15_three_sum.html"},{default:r(()=>[t("15: 三数之和")]),_:1}),V,l(a,{to:"/zh/algorithm/leetcode/hashtable/16_three_sum_closest.html"},{default:r(()=>[t("16: 最接近的三数之和")]),_:1})]),B,e("p",null,[l(a,{to:"/zh/algorithm/leetcode/hashtable/18_four_sum.html"},{default:r(()=>[t("18: 四数之和")]),_:1})]),C])}const j=d(c,[["render",L],["__file","index.html.vue"]]);export{j as default};
