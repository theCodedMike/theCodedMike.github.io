import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as t,e as r}from"./app-d2ca15d9.js";const a={},i=r('<h2 id="foreword" tabindex="-1"><a class="header-anchor" href="#foreword" aria-hidden="true">#</a> Foreword</h2><p>It wasn&#39;t always so clear, but the Rust programming language is fundamentally<br> about empowerment: no matter what kind of code you are writing now, Rust empowers<br> you to reach farther, to program with confidence in a wider variety of domains<br> than you did before.</p><p>Take, for example, &quot;systems-level&quot; work that deals with low-level details of memory<br> management, data representation, and concurrency. Traditionally, this realm of<br> programming is seen as arcane, accessible only to a select few who have devoted the<br> necessary years learning to avoid its infamous pitfalls. And even those who practice<br> it do so with caution, lest their code be open to exploits, crashes, or corruption.</p><p>Rust breaks down these barriers by eliminating the old pitfalls and providing a<br> friendly, polished set of tools to help you along the way.<br> Programmers who need to &quot;dip down&quot; into lower-level control can do so with Rust,<br> without taking on the customary risk of crashes or security holes, and without<br> having to learn the fine points of a fickle toolchain. Better yet, the language<br> is designed to guide you naturally towards reliable code that is efficient in<br> terms of speed and memory usage.</p><p>Programmers who are already working with low-level code can use Rust to raise their<br> ambitions. For example, introducing parallelism in Rust is a relatively low-risk<br> operation: the compiler will catch the classical mistakes for you. And you can<br> tackle more aggressive optimizations in your code with the confidence that you<br> won&#39;t accidentally introduce crashes or vulnerabilities.</p><p>But Rust isn&#39;t limited to low-level systems programming. It&#39;s expressive and ergonomic<br> enough to make CLI apps, web servers, and many other kinds of code quite pleasant to<br> write — you&#39;ll find simple examples of both later in the book. Working with Rust<br> allows you to build skills that transfer from one domain to another; you can learn<br> Rust by writing a web app, then apply those same skills to target your Raspberry Pi.</p><p>This book fully embraces the potential of Rust to empower its users. It&#39;s a friendly<br> and approachable text intended to help you level up not just your knowledge of Rust,<br> but also your reach and confidence as a programmer in general. So dive in, get ready<br> to learn—and welcome to the Rust community!</p><p>— Nicholas Matsakis and Aaron Turon</p>',8),n=[i];function s(l,d){return o(),t("div",null,n)}const u=e(a,[["render",s],["__file","foreword.html.vue"]]);export{u as default};
