const e=JSON.parse(`{"key":"v-2b67bc76","path":"/algorithm/leetcode/linkedlist/141_linked_list_cycle.html","title":"141, Linked List Cycle","lang":"en-US","frontmatter":{"title":"141, Linked List Cycle","icon":"discover","date":"2023-10-26T00:00:00.000Z","order":7,"sticky":true,"category":"linkedlist","tag":["easy","hash table","linked list","two pointers"],"description":"I Problem Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/linkedlist/141_linked_list_cycle.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/linkedlist/141_linked_list_cycle.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"141, Linked List Cycle"}],["meta",{"property":"og:description","content":"I Problem Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-26T11:07:41.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"hash table"}],["meta",{"property":"article:tag","content":"linked list"}],["meta",{"property":"article:tag","content":"two pointers"}],["meta",{"property":"article:published_time","content":"2023-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-26T11:07:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"141, Linked List Cycle\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-26T11:07:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Use HashSet","slug":"approach-1-use-hashset","link":"#approach-1-use-hashset","children":[]},{"level":3,"title":"Approach 2: Two Pointers","slug":"approach-2-two-pointers","link":"#approach-2-two-pointers","children":[]}]}],"git":{"createdTime":1698318461000,"updatedTime":1698318461000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"algorithm/leetcode/linkedlist/141_linked_list_cycle.md","localizedDate":"October 26, 2023","excerpt":"<h2> I Problem</h2>\\n<p>Given <code>head</code>, the head of a linked list, determine if the linked list has a cycle in it.</p>\\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer.<br>\\nInternally, <code>pos</code> is used to denote the index of the node that tail's <code>next</code> pointer is connected to. <strong>Note that <code>pos</code> is not passed as a parameter.</strong></p>","autoDesc":true}`);export{e as data};
