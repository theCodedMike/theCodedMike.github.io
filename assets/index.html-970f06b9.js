const e=JSON.parse(`{"key":"v-a732a012","path":"/algorithm/leetcode/array/","title":"Array","lang":"en-US","frontmatter":{"title":"Array","icon":"discover","date":"2023-09-27T00:00:00.000Z","dir":{"order":1},"category":"leetcode","tag":"array","sticky":true,"description":"About Array When memory is allocated for an array, its individual elements are adjacent, so we can access it by index. let nums = [10, 11, 12, 13, 14, 15]; Array: 10 11 12 13 14 15 index: 0 1 2 3 4 5 assert_eq(nums[0], 10); assert_eq(nums[5], 15); assert_eq(nums[6], xx); // ERROR，index out of bounds","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/array/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/array/"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"Array"}],["meta",{"property":"og:description","content":"About Array When memory is allocated for an array, its individual elements are adjacent, so we can access it by index. let nums = [10, 11, 12, 13, 14, 15]; Array: 10 11 12 13 14 15 index: 0 1 2 3 4 5 assert_eq(nums[0], 10); assert_eq(nums[5], 15); assert_eq(nums[6], xx); // ERROR，index out of bounds"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-12T13:52:20.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:published_time","content":"2023-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-12T13:52:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Array\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-12T13:52:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"About Array","slug":"about-array","link":"#about-array","children":[{"level":3,"title":"Binary Search","slug":"binary-search","link":"#binary-search","children":[]},{"level":3,"title":"Remove Element","slug":"remove-element","link":"#remove-element","children":[]},{"level":3,"title":"Square of Ordered Arrays","slug":"square-of-ordered-arrays","link":"#square-of-ordered-arrays","children":[]},{"level":3,"title":"Minimum Size Subarray Sum","slug":"minimum-size-subarray-sum","link":"#minimum-size-subarray-sum","children":[]},{"level":3,"title":"Spiral Matrix","slug":"spiral-matrix","link":"#spiral-matrix","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1697118740000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":5}]},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"algorithm/leetcode/array/README.md","localizedDate":"September 27, 2023","excerpt":"<h2> About Array</h2>\\n<p>When memory is allocated for an array, its individual elements are adjacent, so we can access it by index.</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>let nums = [10, 11, 12, 13, 14, 15];\\n\\nArray:   10  11  12  13  14  15\\nindex:    0   1   2   3   4   5\\n\\nassert_eq(nums[0], 10);\\nassert_eq(nums[5], 15);\\nassert_eq(nums[6], xx); // ERROR，index out of bounds\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
