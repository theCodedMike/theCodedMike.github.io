const e=JSON.parse('{"key":"v-d8b19f2a","path":"/zh/algorithm/leetcode/binary_tree/654_maximum_binary_tree.html","title":"654, 最大二叉树","lang":"zh-CN","frontmatter":{"title":"654, 最大二叉树","icon":"discover","date":"2024-01-04T00:00:00.000Z","order":25,"sticky":true,"category":"binary tree","tag":["medium","array","binary tree","stack","divide and conquer","monotonic stack"],"description":"一、题目描述 给定一个不重复的整数数组nums。最大二叉树可以用下面的算法从nums递归地构建: 创建一个根节点，其值为nums中的最大值。 递归地在最大值左边的子数组前缀上构建左子树。 递归地在最大值右边的子数组后缀上构建右子树。 返回nums构建的最大二叉树。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/654_maximum_binary_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/654_maximum_binary_tree.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"654, 最大二叉树"}],["meta",{"property":"og:description","content":"一、题目描述 给定一个不重复的整数数组nums。最大二叉树可以用下面的算法从nums递归地构建: 创建一个根节点，其值为nums中的最大值。 递归地在最大值左边的子数组前缀上构建左子树。 递归地在最大值右边的子数组后缀上构建右子树。 返回nums构建的最大二叉树。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-04T21:31:57.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"stack"}],["meta",{"property":"article:tag","content":"divide and conquer"}],["meta",{"property":"article:tag","content":"monotonic stack"}],["meta",{"property":"article:published_time","content":"2024-01-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-04T21:31:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"654, 最大二叉树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-04T21:31:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 递归","slug":"方法-1-递归","link":"#方法-1-递归","children":[]},{"level":3,"title":"方法 2: 单调栈","slug":"方法-2-单调栈","link":"#方法-2-单调栈","children":[]}]}],"git":{"createdTime":1704403917000,"updatedTime":1704403917000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":4.83,"words":1448},"filePathRelative":"zh/algorithm/leetcode/binary_tree/654_maximum_binary_tree.md","localizedDate":"2024年1月4日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给定一个不重复的整数数组<code>nums</code>。<strong>最大二叉树</strong>可以用下面的算法从<code>nums</code>递归地构建:</p>\\n<ol>\\n<li>创建一个根节点，其值为<code>nums</code>中的最大值。</li>\\n<li>递归地在最大值<strong>左边</strong>的<strong>子数组前缀上</strong>构建左子树。</li>\\n<li>递归地在最大值<strong>右边</strong>的<strong>子数组后缀上</strong>构建右子树。</li>\\n</ol>\\n<p>返回<code>nums</code>构建的<strong>最大二叉树</strong>。</p>","autoDesc":true}');export{e as data};
