import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o,c as d,a as e,d as t,w as n,e as l,b as a}from"./app-9cefa6a1.js";const h={},c=l(`<h2 id="about-array" tabindex="-1"><a class="header-anchor" href="#about-array" aria-hidden="true">#</a> About Array</h2><p>When memory is allocated for an array, its individual elements are adjacent, so we can access it by index.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let nums = [10, 11, 12, 13, 14, 15];

Array:   10  11  12  13  14  15
index:    0   1   2   3   4   5

assert_eq(nums[0], 10);
assert_eq(nums[5], 15);
assert_eq(nums[6], xx); // ERRORï¼Œindex out of bounds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="binary-search" tabindex="-1"><a class="header-anchor" href="#binary-search" aria-hidden="true">#</a> Binary Search</h3>`,4),_=e("br",null,null,-1),u=e("br",null,null,-1),m=e("br",null,null,-1),f=e("br",null,null,-1),b=e("h3",{id:"remove-element",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#remove-element","aria-hidden":"true"},"#"),a(" Remove Element")],-1),y=e("br",null,null,-1),v=e("br",null,null,-1),x=e("br",null,null,-1),p=e("h3",{id:"square-of-ordered-arrays",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#square-of-ordered-arrays","aria-hidden":"true"},"#"),a(" Square of Ordered Arrays")],-1),g=l('<h3 id="subarray-with-the-smallest-length" tabindex="-1"><a class="header-anchor" href="#subarray-with-the-smallest-length" aria-hidden="true">#</a> Subarray with the Smallest Length</h3><h3 id="spiral-matrix-ii" tabindex="-1"><a class="header-anchor" href="#spiral-matrix-ii" aria-hidden="true">#</a> Spiral Matrix II</h3><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h2>',3);function S(q,R){const r=s("RouterLink");return o(),d("div",null,[c,e("p",null,[t(r,{to:"/algorithm/leetcode/array/704_binary_search.html"},{default:n(()=>[a("704: Binary Search")]),_:1}),_,t(r,{to:"/algorithm/leetcode/array/35_search_insert_position.html"},{default:n(()=>[a("35: Search Insert Position")]),_:1}),u,t(r,{to:"/algorithm/leetcode/array/34_find_first_and_last_position_of_element_in_sorted_array.html"},{default:n(()=>[a("34: Find First and Last Position of Element in Sorted Array")]),_:1}),m,t(r,{to:"/algorithm/leetcode/array/69_sqrt_x.html"},{default:n(()=>[a("69: Sqrt(x)")]),_:1}),f,t(r,{to:"/algorithm/leetcode/array/367_valid_perfect_square.html"},{default:n(()=>[a("367: Valid Perfect Square")]),_:1})]),b,e("p",null,[t(r,{to:"/algorithm/leetcode/array/27_remove_element.html"},{default:n(()=>[a("27: Remove Element")]),_:1}),y,t(r,{to:"/algorithm/leetcode/array/26_remove_duplicates_from_sorted_array.html"},{default:n(()=>[a("26: Remove Duplicates from Sorted Array")]),_:1}),v,t(r,{to:"/algorithm/leetcode/array/283_move_zeroes.html"},{default:n(()=>[a("283: Move Zeroes")]),_:1}),x,t(r,{to:"/algorithm/leetcode/array/844_backspace_string_compare.html"},{default:n(()=>[a("844: Backspace String Compare")]),_:1})]),p,e("p",null,[t(r,{to:"/algorithm/leetcode/array/977_squares_of_a_sorted_array.html"},{default:n(()=>[a("977: Squares of a Sorted Array")]),_:1})]),g])}const w=i(h,[["render",S],["__file","index.html.vue"]]);export{w as default};
