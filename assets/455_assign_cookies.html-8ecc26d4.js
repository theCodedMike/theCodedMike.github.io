const e=JSON.parse(`{"key":"v-6bb9ccbe","path":"/algorithm/leetcode/greedy/455_assign_cookies.html","title":"455, Assign Cookies","lang":"en-US","frontmatter":{"title":"455, Assign Cookies","icon":"discover","date":"2024-02-26T00:00:00.000Z","order":1,"sticky":true,"category":"greedy","tag":["easy","greedy","array","two pointers","sorting"],"description":"I Problem Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] &gt;= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/greedy/455_assign_cookies.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/greedy/455_assign_cookies.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"455, Assign Cookies"}],["meta",{"property":"og:description","content":"I Problem Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] &gt;= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T15:23:43.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"greedy"}],["meta",{"property":"article:tag","content":"array"}],["meta",{"property":"article:tag","content":"two pointers"}],["meta",{"property":"article:tag","content":"sorting"}],["meta",{"property":"article:published_time","content":"2024-02-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-26T15:23:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"455, Assign Cookies\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-26T15:23:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Brute Force","slug":"approach-1-brute-force","link":"#approach-1-brute-force","children":[]},{"level":3,"title":"Approach 2: Two Pointers + Greedy","slug":"approach-2-two-pointers-greedy","link":"#approach-2-two-pointers-greedy","children":[]}]}],"git":{"createdTime":1708961023000,"updatedTime":1708961023000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":1.65,"words":494},"filePathRelative":"algorithm/leetcode/greedy/455_assign_cookies.md","localizedDate":"February 26, 2024","excerpt":"<h2> I Problem</h2>\\n<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.</p>\\n<p>Each child <code>i</code> has a greed factor <code>g[i]</code>, which is the minimum size of a cookie that the child will be content with; and each cookie <code>j</code> has a size <code>s[j]</code>. If <code>s[j] &gt;= g[i]</code>, we can assign the cookie <code>j</code> to the child <code>i</code>, and the child <code>i</code> will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>","autoDesc":true}`);export{e as data};
