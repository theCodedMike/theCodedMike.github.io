const e=JSON.parse(`{"key":"v-0f279bd3","path":"/algorithm/leetcode/binary_tree/538_convert_bst_to_greater_tree.html","title":"538, Convert BST to Greater Tree","lang":"en-US","frontmatter":{"title":"538, Convert BST to Greater Tree","icon":"discover","date":"2024-01-11T00:00:00.000Z","order":31,"sticky":true,"category":"binary tree","tag":["medium","binary tree","depth first search","binary search tree"],"description":"I Problem Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST. As a reminder, a binary search tree is a tree that satisfies these constraints:","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/538_convert_bst_to_greater_tree.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/538_convert_bst_to_greater_tree.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"538, Convert BST to Greater Tree"}],["meta",{"property":"og:description","content":"I Problem Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST. As a reminder, a binary search tree is a tree that satisfies these constraints:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-12T00:49:21.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"binary search tree"}],["meta",{"property":"article:published_time","content":"2024-01-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-12T00:49:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"538, Convert BST to Greater Tree\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-12T00:49:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Mirror In-order Traversal","slug":"approach-1-mirror-in-order-traversal","link":"#approach-1-mirror-in-order-traversal","children":[]},{"level":3,"title":"Approach 2: Morris Mirror In-order Traversal","slug":"approach-2-morris-mirror-in-order-traversal","link":"#approach-2-morris-mirror-in-order-traversal","children":[]}]}],"git":{"createdTime":1705020561000,"updatedTime":1705020561000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":2.82,"words":845},"filePathRelative":"algorithm/leetcode/binary_tree/538_convert_bst_to_greater_tree.md","localizedDate":"January 11, 2024","excerpt":"<h2> I Problem</h2>\\n<p>Given the <code>root</code> of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.</p>\\n<p>As a reminder, a <em>binary search tree</em> is a tree that satisfies these constraints:</p>","autoDesc":true}`);export{e as data};
