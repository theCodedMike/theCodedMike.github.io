const e=JSON.parse('{"key":"v-39043212","path":"/zh/algorithm/leetcode/binary_tree/429_n_ary_tree_level_order_traversal.html","title":"429, N叉树的层序遍历","lang":"zh-CN","frontmatter":{"title":"429, N叉树的层序遍历","icon":"discover","date":"2023-12-15T00:00:00.000Z","order":8,"sticky":true,"category":"binary tree","tag":["medium","tree","depth first search","breadth first search"],"description":"一、题目描述 给定一个N叉树，返回其节点值的层序遍历。（即从左到右，逐层遍历）。 树的序列化输入是用层序遍历，每组子节点都由null值分隔（参见示例）。 示例 1 输入: root = [1, null, 3, 2, 4, null, 5, 6] 输出: [[1], [3, 2, 4], [5, 6]] 示例 2 输入: root = [1, null, 2, 3, 4, 5, null, null, 6, 7, null, 8, null, 9, 10, null, null, 11, null, 12, null, 13, null, null, 14] 输出: [[1], [2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13], [14]]","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/429_n_ary_tree_level_order_traversal.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/429_n_ary_tree_level_order_traversal.html"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"429, N叉树的层序遍历"}],["meta",{"property":"og:description","content":"一、题目描述 给定一个N叉树，返回其节点值的层序遍历。（即从左到右，逐层遍历）。 树的序列化输入是用层序遍历，每组子节点都由null值分隔（参见示例）。 示例 1 输入: root = [1, null, 3, 2, 4, null, 5, 6] 输出: [[1], [3, 2, 4], [5, 6]] 示例 2 输入: root = [1, null, 2, 3, 4, 5, null, null, 6, 7, null, 8, null, 9, 10, null, null, 11, null, 12, null, 13, null, null, 14] 输出: [[1], [2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13], [14]]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-12-16T13:46:02.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"medium"}],["meta",{"property":"article:tag","content":"tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:tag","content":"breadth first search"}],["meta",{"property":"article:published_time","content":"2023-12-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-16T13:46:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"429, N叉树的层序遍历\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-16T13:46:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"一、题目描述","slug":"一、题目描述","link":"#一、题目描述","children":[]},{"level":2,"title":"二、题解","slug":"二、题解","link":"#二、题解","children":[{"level":3,"title":"方法 1: 深度优先搜索","slug":"方法-1-深度优先搜索","link":"#方法-1-深度优先搜索","children":[]},{"level":3,"title":"方法 2: 广度优先搜索","slug":"方法-2-广度优先搜索","link":"#方法-2-广度优先搜索","children":[]}]}],"git":{"createdTime":1702674563000,"updatedTime":1702734362000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":2}]},"readingTime":{"minutes":5.23,"words":1569},"filePathRelative":"zh/algorithm/leetcode/binary_tree/429_n_ary_tree_level_order_traversal.md","localizedDate":"2023年12月15日","excerpt":"<h2> 一、题目描述</h2>\\n<p>给定一个<code>N</code>叉树，返回其节点值的层序遍历。（即从左到右，逐层遍历）。</p>\\n<p>树的序列化输入是用层序遍历，每组子节点都由<code>null</code>值分隔（参见示例）。</p>\\n<p><strong>示例 1</strong><br>\\n<br>\\n输入: root = [1, null, 3, 2, 4, null, 5, 6]<br>\\n输出: [[1], [3, 2, 4], [5, 6]]</p>\\n<p><strong>示例 2</strong><br>\\n<br>\\n输入: root = [1, null, 2, 3, 4, 5, null, null, 6, 7, null, 8, null, 9, 10, null, null, 11, null, 12, null, 13, null, null, 14]<br>\\n输出: [[1], [2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13], [14]]</p>","autoDesc":true}');export{e as data};
