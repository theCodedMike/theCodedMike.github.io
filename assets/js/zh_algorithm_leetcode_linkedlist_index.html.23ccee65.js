"use strict";(self.webpackChunkmike_blog=self.webpackChunkmike_blog||[]).push([[62457],{3766:(e,l,t)=>{t.r(l),t.d(l,{comp:()=>m,data:()=>_});var i=t(60362),n=t(19045),a=t(65144),s=t(41819),d=t(67163),r=t(74173),o=t(85114),h=t(83773),c=t(39360),p=t(6753),k=t(43775);const g={},m=(0,t(75726).A)(g,[["render",function(e,l){const t=(0,i.g2)("RouteLink");return(0,i.uX)(),(0,i.CE)("div",null,[l[9]||(l[9]=(0,i.Fv)('<h2 id="链表" tabindex="-1"><a class="header-anchor" href="#链表"><span>链表</span></a></h2><p>链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域，另一个是指针域。<br><img src="'+n+'" alt="Linked List" loading="lazy"></p><h3 id="链表的类型" tabindex="-1"><a class="header-anchor" href="#链表的类型"><span>链表的类型</span></a></h3><ul><li>单链表<br><img src="'+a+'" alt="Singly Linked List" loading="lazy"></li><li>双链表<br><img src="'+s+'" alt="Doubly Linked List" loading="lazy"></li><li>循环单链表<br><img src="'+d+'" alt="Circular Singly Linked List" loading="lazy"></li><li>循环双链表<br><img src="'+r+'" alt="Circular Doubly Linked List" loading="lazy"></li></ul><h3 id="链表的内存分配" tabindex="-1"><a class="header-anchor" href="#链表的内存分配"><span>链表的内存分配</span></a></h3><p>链表中的节点在内存中不是连续分布的 ，而是散乱分布在内存中的某地址上。<br><img src="'+o+'" alt="Linked List Memory Allocation" loading="lazy"></p><h3 id="链表的操作" tabindex="-1"><a class="header-anchor" href="#链表的操作"><span>链表的操作</span></a></h3><h4 id="添加节点" tabindex="-1"><a class="header-anchor" href="#添加节点"><span>添加节点</span></a></h4><p><img src="'+h+'" alt="Singly Linked List Add Node" loading="lazy"><br><img src="'+c+'" alt="Doubly Linked List Add Node" loading="lazy"></p><h4 id="删除节点" tabindex="-1"><a class="header-anchor" href="#删除节点"><span>删除节点</span></a></h4><p><img src="'+p+'" alt="Singly Linked List Delete Node" loading="lazy"><br><img src="'+k+'" alt="Doubly Linked List Delete Node" loading="lazy"></p><h2 id="习题" tabindex="-1"><a class="header-anchor" href="#习题"><span>习题</span></a></h2><h3 id="移除链表元素" tabindex="-1"><a class="header-anchor" href="#移除链表元素"><span>移除链表元素</span></a></h3>',13)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/203_remove_linked_list_elements.html"},{default:(0,i.k6)(()=>[...l[0]||(l[0]=[(0,i.eW)("203: 移除链表元素",-1)])]),_:1})]),l[10]||(l[10]=(0,i.Lk)("h3",{id:"设计链表",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#设计链表"},[(0,i.Lk)("span",null,"设计链表")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/707_design_linked_list.html"},{default:(0,i.k6)(()=>[...l[1]||(l[1]=[(0,i.eW)("707: 设计链表",-1)])]),_:1})]),l[11]||(l[11]=(0,i.Lk)("h3",{id:"反转链表",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#反转链表"},[(0,i.Lk)("span",null,"反转链表")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/206_reverse_linked_list.html"},{default:(0,i.k6)(()=>[...l[2]||(l[2]=[(0,i.eW)("206: 反转链表",-1)])]),_:1})]),l[12]||(l[12]=(0,i.Lk)("h3",{id:"两两交换链表中的节点",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#两两交换链表中的节点"},[(0,i.Lk)("span",null,"两两交换链表中的节点")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/24_swap_nodes_in_pairs.html"},{default:(0,i.k6)(()=>[...l[3]||(l[3]=[(0,i.eW)("24: 两两交换链表中的节点",-1)])]),_:1})]),l[13]||(l[13]=(0,i.Lk)("h3",{id:"删除链表的倒数第n个节点",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#删除链表的倒数第n个节点"},[(0,i.Lk)("span",null,"删除链表的倒数第N个节点")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/19_remove_nth_node_from_end_of_list.html"},{default:(0,i.k6)(()=>[...l[4]||(l[4]=[(0,i.eW)("19: 删除链表的倒数第N个节点",-1)])]),_:1})]),l[14]||(l[14]=(0,i.Lk)("h3",{id:"链表相交",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#链表相交"},[(0,i.Lk)("span",null,"链表相交")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/160_intersection_of_two_linked_lists.html"},{default:(0,i.k6)(()=>[...l[5]||(l[5]=[(0,i.eW)("160: 链表相交",-1)])]),_:1})]),l[15]||(l[15]=(0,i.Lk)("h3",{id:"环形链表",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#环形链表"},[(0,i.Lk)("span",null,"环形链表")])],-1)),(0,i.Lk)("p",null,[(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/141_linked_list_cycle.html"},{default:(0,i.k6)(()=>[...l[6]||(l[6]=[(0,i.eW)("141: 环形链表",-1)])]),_:1}),l[8]||(l[8]=(0,i.Lk)("br",null,null,-1)),(0,i.bF)(t,{to:"/zh/algorithm/leetcode/linkedlist/142_linked_list_cycle_II.html"},{default:(0,i.k6)(()=>[...l[7]||(l[7]=[(0,i.eW)("142: 环形链表II",-1)])]),_:1})]),l[16]||(l[16]=(0,i.Lk)("h2",{id:"总结",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#总结"},[(0,i.Lk)("span",null,"总结")])],-1))])}]]),_=JSON.parse('{"path":"/zh/algorithm/leetcode/linkedlist/","title":"链表","lang":"zh-CN","frontmatter":{"title":"链表","icon":"discover","date":"2023-10-20T00:00:00.000Z","dir":{"order":2},"category":"leetcode","tag":"linkedlist","sticky":false,"description":"链表 链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域，另一个是指针域。 Linked List 链表的类型 单链表 Singly Linked List 双链表 Doubly Linked List 循环单链表 Circular Singly Linked List 循环双链表 Circular Doubly Linked...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"链表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T11:21:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/linkedlist/"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"链表"}],["meta",{"property":"og:description","content":"链表 链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域，另一个是指针域。 Linked List 链表的类型 单链表 Singly Linked List 双链表 Doubly Linked List 循环单链表 Circular Singly Linked List 循环双链表 Circular Doubly Linked..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:21:34.000Z"}],["meta",{"property":"article:tag","content":"linkedlist"}],["meta",{"property":"article:published_time","content":"2023-10-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:21:34.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/linkedlist/"}]]},"git":{"createdTime":1695811035000,"updatedTime":1698405694000,"contributors":[{"name":"mike","username":"mike","email":"lixiaofeng1115@outlook.com","commits":9,"url":"https://github.com/mike"}]},"readingTime":{"minutes":1,"words":299},"filePathRelative":"zh/algorithm/leetcode/linkedlist/README.md","excerpt":"<h2>链表</h2>\\n<p>链表是一种通过指针串联在一起的线性结构，每一个节点由两部分组成，一个是数据域，另一个是指针域。<br>\\n</p>\\n<h3>链表的类型</h3>\\n<ul>\\n<li>单链表<br>\\n</li>\\n<li>双链表<br>\\n</li>\\n<li>循环单链表<br>\\n</li>\\n<li>循环双链表<br>\\n</li>\\n</ul>\\n<h3>链表的内存分配</h3>\\n<p>链表中的节点在内存中不是连续分布的 ，而是散乱分布在内存中的某地址上。<br>\\n</p>\\n<h3>链表的操作</h3>\\n<h4>添加节点</h4>\\n<p><br>\\n</p>\\n<h4>删除节点</h4>\\n<p><br>\\n</p>","autoDesc":true}')},6753:(e,l,t)=>{e.exports=t.p+"assets/img/singly_linked_list_delete_node.c154c84c.png"},19045:(e,l,t)=>{e.exports=t.p+"assets/img/linked_list.4a8bf176.png"},39360:(e,l,t)=>{e.exports=t.p+"assets/img/doubly_linked_list_add_node.5ab0d21e.png"},41819:(e,l,t)=>{e.exports=t.p+"assets/img/doubly_linked_list.337b1de3.png"},43775:(e,l,t)=>{e.exports=t.p+"assets/img/doubly_linked_list_delete_node.83044e72.webp"},65144:(e,l,t)=>{e.exports=t.p+"assets/img/singly_linked_list.196e2bd7.jpg"},67163:(e,l,t)=>{e.exports=t.p+"assets/img/circular_singly_linked_list.a06f2e40.webp"},74173:(e,l,t)=>{e.exports=t.p+"assets/img/circular_doubly_linked_list.87dc4c63.jpg"},75726:(e,l)=>{l.A=(e,l)=>{const t=e.__vccOpts||e;for(const[e,i]of l)t[e]=i;return t}},83773:(e,l,t)=>{e.exports=t.p+"assets/img/singly_linked_list_add_node.039c158f.png"},85114:(e,l,t)=>{e.exports=t.p+"assets/img/linked_list_memory_allocation.d9cb88a5.jpg"}}]);