"use strict";(self.webpackChunkmike_blog=self.webpackChunkmike_blog||[]).push([[47557],{28567:(e,t,a)=>{a.d(t,{a:()=>i});var l=a(1913),s=a(91089),r=a(47661),i=(0,r.a)((e,t,a,r)=>{e.attr("class",a);let{width:i,height:c,x:d,y:p}=n(e,t);(0,l.L)(e,c,i,r);let h=o(d,p,i,c,t);e.attr("viewBox",h),s.b.debug(`viewBox configured: ${h} with padding: ${t}`)},"setupViewPortForSVG"),n=(0,r.a)((e,t)=>{let a=e.node()?.getBBox()||{width:0,height:0,x:0,y:0};return{width:a.width+2*t,height:a.height+2*t,x:a.x,y:a.y}},"calculateDimensionsWithPadding"),o=(0,r.a)((e,t,a,l,s)=>`${e-s} ${t-s} ${a} ${l}`,"createViewBox")},47557:(e,t,a)=>{a.d(t,{diagram:()=>b});var l=a(94708),s=a(54851),r=(a(69075),a(5758),a(74723),a(75140),a(44608),a(58742),a(32168)),i=a(28567),n=a(85020),o=a(23066),c=(a(50491),a(1913)),d=a(91089),p=(a(709),a(56371),a(30543),a(57824),a(51899),a(47661)),h=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=c.P,this.getAccTitle=c.Q,this.setDiagramTitle=c.T,this.getDiagramTitle=c.U,this.getAccDescription=c.S,this.setAccDescription=c.R}static{(0,p.a)(this,"TreeMapDB")}getNodes(){return this.nodes}getConfig(){let e=c.i,t=(0,c.q)();return(0,o.l)({...e.treemap,...t.treemap??{}})}addNode(e,t){this.nodes.push(e),this.levels.set(e,t),0===t&&(this.outerNodes.push(e),this.root??=e)}getRoot(){return{name:"",children:this.outerNodes}}addClass(e,t){let a=this.classes.get(e)??{id:e,styles:[],textStyles:[]},l=t.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");l&&l.forEach(e=>{(0,n.c)(e)&&(a?.textStyles?a.textStyles.push(e):a.textStyles=[e]),a?.styles?a.styles.push(e):a.styles=[e]}),this.classes.set(e,a)}getClasses(){return this.classes}getStylesForClass(e){return this.classes.get(e)?.styles??[]}clear(){(0,c.O)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}};function m(e){if(!e.length)return[];let t=[],a=[];return e.forEach(e=>{let l={name:e.name,children:"Leaf"===e.type?void 0:[]};for(l.classSelector=e?.classSelector,e?.cssCompiledStyles&&(l.cssCompiledStyles=[e.cssCompiledStyles]),"Leaf"===e.type&&void 0!==e.value&&(l.value=e.value);a.length>0&&a[a.length-1].level>=e.level;)a.pop();if(0===a.length)t.push(l);else{let e=a[a.length-1].node;e.children?e.children.push(l):e.children=[l]}"Leaf"!==e.type&&a.push({node:l,level:e.level})}),t}(0,p.a)(m,"buildHierarchy");var y=(0,p.a)((e,t)=>{(0,l.a)(e,t);let a=[];for(let a of e.TreemapRows??[])"ClassDefStatement"===a.$type&&t.addClass(a.className??"",a.styleText??"");for(let l of e.TreemapRows??[]){let e=l.item;if(!e)continue;let s=l.indent?parseInt(l.indent):0,r=f(e),i=e.classSelector?t.getStylesForClass(e.classSelector):[],n=i.length>0?i.join(";"):void 0,o={level:s,name:r,type:e.$type,value:e.value,classSelector:e.classSelector,cssCompiledStyles:n};a.push(o)}let s=m(a),r=(0,p.a)((e,a)=>{for(let l of e)t.addNode(l,a),l.children&&l.children.length>0&&r(l.children,a+1)},"addNodesRecursively");r(s,0)},"populate"),f=(0,p.a)(e=>e.name?String(e.name):"","getItemName"),u={parser:{yy:void 0},parse:(0,p.a)(async e=>{try{let t=await(0,s.a)("treemap",e);d.b.debug("Treemap AST:",t);let a=u.parser?.yy;if(!(a instanceof h))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");y(t,a)}catch(e){throw d.b.error("Error parsing treemap:",e),e}},"parse")},g={draw:(0,p.a)((e,t,a,l)=>{let s=l.db,o=s.getConfig(),h=o.padding??10,m=s.getDiagramTitle(),y=s.getRoot(),{themeVariables:f}=(0,c.q)();if(!y)return;let u,g=m?30:0,S=(0,r.a)(t),x=o.nodeWidth?10*o.nodeWidth:960,b=o.nodeHeight?10*o.nodeHeight:500,C=x,w=b+g;S.attr("viewBox",`0 0 ${C} ${w}`),(0,c.L)(S,w,C,o.useMaxWidth);try{let e=o.valueFormat||",";if("$0,0"===e)u=(0,p.a)(e=>"$"+(0,d.j)(",")(e),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),a=t?t[0]:"";u=(0,p.a)(e=>"$"+(0,d.j)(","+a)(e),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);u=(0,p.a)(e=>"$"+(0,d.j)(t||"")(e),"valueFormat")}else u=(0,d.j)(e)}catch(e){d.b.error("Error creating format function:",e),u=(0,d.j)(",")}let v=(0,d.m)().range(["transparent",f.cScale0,f.cScale1,f.cScale2,f.cScale3,f.cScale4,f.cScale5,f.cScale6,f.cScale7,f.cScale8,f.cScale9,f.cScale10,f.cScale11]),$=(0,d.m)().range(["transparent",f.cScalePeer0,f.cScalePeer1,f.cScalePeer2,f.cScalePeer3,f.cScalePeer4,f.cScalePeer5,f.cScalePeer6,f.cScalePeer7,f.cScalePeer8,f.cScalePeer9,f.cScalePeer10,f.cScalePeer11]),k=(0,d.m)().range([f.cScaleLabel0,f.cScaleLabel1,f.cScaleLabel2,f.cScaleLabel3,f.cScaleLabel4,f.cScaleLabel5,f.cScaleLabel6,f.cScaleLabel7,f.cScaleLabel8,f.cScaleLabel9,f.cScaleLabel10,f.cScaleLabel11]);m&&S.append("text").attr("x",C/2).attr("y",g/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(m);let L=S.append("g").attr("transform",`translate(0, ${g})`).attr("class","treemapContainer"),T=(0,d.k)(y).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),M=(0,d.l)().size([x,b]).paddingTop(e=>e.children&&e.children.length>0?35:0).paddingInner(h).paddingLeft(e=>e.children&&e.children.length>0?10:0).paddingRight(e=>e.children&&e.children.length>0?10:0).paddingBottom(e=>e.children&&e.children.length>0?10:0).round(!0)(T),z=M.descendants().filter(e=>e.children&&e.children.length>0),F=L.selectAll(".treemapSection").data(z).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);F.append("rect").attr("width",e=>e.x1-e.x0).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>0===e.depth?"display: none;":""),F.append("clipPath").attr("id",(e,a)=>`clip-section-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",25),F.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>v(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>$(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(0===e.depth)return"display: none;";let t=(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),F.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text(e=>0===e.depth?"":e.data.name).attr("font-weight","bold").attr("style",e=>0===e.depth?"display: none;":"dominant-baseline: middle; font-size: 12px; fill:"+k(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).each(function(e){if(0===e.depth)return;let t=(0,d.h)(this),a=e.data.name;t.text(a);let l,s=e.x1-e.x0;l=!1!==o.showValues&&e.value?s-10-30-10-6:s-6-6;let r=Math.max(15,l),i=t.node();if(i.getComputedTextLength()>r){let e=a;for(;e.length>0;){if(e=a.substring(0,e.length-1),0===e.length){t.text("..."),i.getComputedTextLength()>r&&t.text("");break}if(t.text(e+"..."),i.getComputedTextLength()<=r)break}}}),!1!==o.showValues&&F.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?u(e.value):"").attr("font-style","italic").attr("style",e=>0===e.depth?"display: none;":"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+k(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"));let P=M.leaves(),D=L.selectAll(".treemapLeafGroup").data(P).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);D.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?v(e.parent.data.name):v(e.data.name)).attr("style",e=>(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?v(e.parent.data.name):v(e.data.name)).attr("stroke-width",3),D.append("clipPath").attr("id",(e,a)=>`clip-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),D.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+k(e.data.name)+";"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.data.name).each(function(e){let t=(0,d.h)(this),a=e.x1-e.x0,l=e.y1-e.y0,s=t.node(),r=a-8,i=l-8;if(r<10||i<10)return void t.style("display","none");let n=parseInt(t.style("font-size"),10);for(;s.getComputedTextLength()>r&&n>8;)n--,t.style("font-size",`${n}px`);let o=Math.max(6,Math.min(28,Math.round(.6*n))),c=n+2+o;for(;c>i&&n>8&&(n--,o=Math.max(6,Math.min(28,Math.round(.6*n))),!(o<6&&8===n));)t.style("font-size",`${n}px`),c=n+2+o;t.style("font-size",`${n}px`),(s.getComputedTextLength()>r||n<8||i<n)&&t.style("display","none")}),!1!==o.showValues&&D.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+k(e.data.name)+";"+(0,n.d)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.value?u(e.value):"").each(function(e){let t=(0,d.h)(this),a=this.parentNode;if(!a)return void t.style("display","none");let l=(0,d.h)(a).select(".treemapLabel");if(l.empty()||"none"===l.style("display"))return void t.style("display","none");let s=parseFloat(l.style("font-size")),r=Math.max(6,Math.min(28,Math.round(.6*s)));t.style("font-size",`${r}px`);let i=(e.y1-e.y0)/2+s/2+2;t.attr("y",i);let n=e.x1-e.x0,o=e.y1-e.y0-4,c=n-8;t.node().getComputedTextLength()>c||i+r>o||r<6?t.style("display","none"):t.style("display",null)});let N=o.diagramPadding??8;(0,i.a)(S,N,"flowchart",o?.useMaxWidth||!1)},"draw"),getClasses:(0,p.a)(function(e,t){return t.db.getClasses()},"getClasses")},S={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},x=(0,p.a)(({treemap:e}={})=>{let t=(0,o.l)(S,e);return`\n  .treemapNode.section {\n    stroke: ${t.sectionStrokeColor};\n    stroke-width: ${t.sectionStrokeWidth};\n    fill: ${t.sectionFillColor};\n  }\n  .treemapNode.leaf {\n    stroke: ${t.leafStrokeColor};\n    stroke-width: ${t.leafStrokeWidth};\n    fill: ${t.leafFillColor};\n  }\n  .treemapLabel {\n    fill: ${t.labelColor};\n    font-size: ${t.labelFontSize};\n  }\n  .treemapValue {\n    fill: ${t.valueColor};\n    font-size: ${t.valueFontSize};\n  }\n  .treemapTitle {\n    fill: ${t.titleColor};\n    font-size: ${t.titleFontSize};\n  }\n  `},"getStyles"),b={parser:u,get db(){return new h},renderer:g,styles:x}},94708:(e,t,a)=>{function l(e,t){e.accDescr&&t.setAccDescription?.(e.accDescr),e.accTitle&&t.setAccTitle?.(e.accTitle),e.title&&t.setDiagramTitle?.(e.title)}a.d(t,{a:()=>l}),(0,a(47661).a)(l,"populateCommonDb")}}]);