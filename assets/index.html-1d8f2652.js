const e=JSON.parse('{"key":"v-736f75f2","path":"/zh/algorithm/leetcode/stack_queue/","title":"栈/队列","lang":"zh-CN","frontmatter":{"title":"栈/队列","icon":"discover","date":"2023-11-26T00:00:00.000Z","dir":{"order":6},"category":"leetcode","tag":["stack","queue"],"sticky":false,"description":"栈/队列 栈 栈是计算机科学中的一种抽象数据类型，只允许在有序的线性数据集合的一端（称为栈顶，top）进行加入数据（push）和移除数据（pop）。因而按照后进先出（LIFO, Last In First Out）的原理运作，栈常用一维数组或链表来实现。常与另一种有序的线性数据集合队列相提并论。 栈使用两种基本操作： 入栈：将元素放入栈的顶端。 出栈：将栈顶端的元素移除。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/stack_queue/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/stack_queue/"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"栈/队列"}],["meta",{"property":"og:description","content":"栈/队列 栈 栈是计算机科学中的一种抽象数据类型，只允许在有序的线性数据集合的一端（称为栈顶，top）进行加入数据（push）和移除数据（pop）。因而按照后进先出（LIFO, Last In First Out）的原理运作，栈常用一维数组或链表来实现。常与另一种有序的线性数据集合队列相提并论。 栈使用两种基本操作： 入栈：将元素放入栈的顶端。 出栈：将栈顶端的元素移除。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-28T16:04:34.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"stack"}],["meta",{"property":"article:tag","content":"queue"}],["meta",{"property":"article:published_time","content":"2023-11-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-28T16:04:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"栈/队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-28T16:04:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"栈/队列","slug":"栈-队列","link":"#栈-队列","children":[{"level":3,"title":"栈","slug":"栈","link":"#栈","children":[]},{"level":3,"title":"队列","slug":"队列","link":"#队列","children":[]}]},{"level":2,"title":"习题","slug":"习题","link":"#习题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1701187474000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":4}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"zh/algorithm/leetcode/stack_queue/README.md","localizedDate":"2023年11月26日","excerpt":"<h2> 栈/队列</h2>\\n<h3> 栈</h3>\\n<p><code>栈</code>是计算机科学中的一种抽象数据类型，只允许在有序的线性数据集合的一端（称为栈顶，top）进行加入数据（<strong>push</strong>）和移除数据（<strong>pop</strong>）。因而按照后进先出（<strong>LIFO</strong>, Last In First Out）的原理运作，栈常用一维数组或链表来实现。常与另一种有序的线性数据集合<strong>队列</strong>相提并论。<br>\\n</p>\\n<p><strong>栈</strong>使用两种基本操作：</p>\\n<ul>\\n<li>入栈：将元素放入栈的顶端。</li>\\n<li>出栈：将栈顶端的元素移除。<br>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
