import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c as o,a as i,d as a,w as r,e as t,b as n}from"./app-d3b6d2f1.js";const h={},c=t(`<h2 id="数组的理论知识" tabindex="-1"><a class="header-anchor" href="#数组的理论知识" aria-hidden="true">#</a> 数组的理论知识</h2><p>当给数组分配内存时，数组中的各个元素是相邻的，所以可以通过下标来访问其中的某个元素。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let nums = [10, 11, 12, 13, 14, 15];

Array:   10  11  12  13  14  15
index:    0   1   2   3   4   5

assert_eq(nums[0], 10);
assert_eq(nums[5], 15);
assert_eq(nums[6], xx); // ERROR，index out of bounds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二分查找" tabindex="-1"><a class="header-anchor" href="#二分查找" aria-hidden="true">#</a> 二分查找</h3>`,4),_=i("br",null,null,-1),u=i("br",null,null,-1),m=i("br",null,null,-1),f=t('<h3 id="移除元素" tabindex="-1"><a class="header-anchor" href="#移除元素" aria-hidden="true">#</a> 移除元素</h3><h3 id="有序数组的平方" tabindex="-1"><a class="header-anchor" href="#有序数组的平方" aria-hidden="true">#</a> 有序数组的平方</h3><h3 id="长度最小的子数组" tabindex="-1"><a class="header-anchor" href="#长度最小的子数组" aria-hidden="true">#</a> 长度最小的子数组</h3><h3 id="螺旋矩阵ii" tabindex="-1"><a class="header-anchor" href="#螺旋矩阵ii" aria-hidden="true">#</a> 螺旋矩阵II</h3><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>',5);function v(x,b){const e=s("RouterLink");return l(),o("div",null,[c,i("p",null,[a(e,{to:"/zh/algorithm/leetcode/array/35_search_insert_position.html"},{default:r(()=>[n("35: 搜索插入位置")]),_:1}),_,a(e,{to:"/zh/algorithm/leetcode/array/34_find_first_and_last_position_of_element_in_sorted_array.html"},{default:r(()=>[n("34: 在排序数组中查找元素的第一个和最后一个位置")]),_:1}),u,a(e,{to:"/zh/algorithm/leetcode/array/69_sqrt_x.html"},{default:r(()=>[n("69: x的平方根")]),_:1}),m,a(e,{to:"/zh/algorithm/leetcode/array/367_valid_perfect_square.html"},{default:r(()=>[n("367: 有效的完全平方数")]),_:1})]),f])}const y=d(h,[["render",v],["__file","index.html.vue"]]);export{y as default};
