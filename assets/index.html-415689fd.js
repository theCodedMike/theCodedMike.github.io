const e=JSON.parse('{"key":"v-425e693e","path":"/zh/algorithm/leetcode/hashtable/","title":"哈希表","lang":"zh-CN","frontmatter":{"title":"哈希表","icon":"discover","date":"2023-10-28T00:00:00.000Z","dir":{"order":3},"category":"leetcode","tag":"hashtable","sticky":false,"description":"哈希表的理论知识 概念 散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存储存位置的数据结构。也就是说，它通过计算出一个键值的函数，将所需查询的数据映射到表中一个位置来让人访问，这加快了查找速度。这个映射函数称做散列函数，存放记录的数组称做散列表。 hash table 哈希函数 若关键字为k，则其值存放在f(k)的存储位置上。由此，不需比较便可直接取得所查记录。称这个对应关系f为散列函数。","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/hashtable/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/hashtable/"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"哈希表"}],["meta",{"property":"og:description","content":"哈希表的理论知识 概念 散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存储存位置的数据结构。也就是说，它通过计算出一个键值的函数，将所需查询的数据映射到表中一个位置来让人访问，这加快了查找速度。这个映射函数称做散列函数，存放记录的数组称做散列表。 hash table 哈希函数 若关键字为k，则其值存放在f(k)的存储位置上。由此，不需比较便可直接取得所查记录。称这个对应关系f为散列函数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-07T10:24:19.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"hashtable"}],["meta",{"property":"article:published_time","content":"2023-10-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-07T10:24:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"哈希表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-07T10:24:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"哈希表的理论知识","slug":"哈希表的理论知识","link":"#哈希表的理论知识","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"哈希函数","slug":"哈希函数","link":"#哈希函数","children":[]},{"level":3,"title":"处理冲突","slug":"处理冲突","link":"#处理冲突","children":[]},{"level":3,"title":"载荷因子","slug":"载荷因子","link":"#载荷因子","children":[]}]},{"level":2,"title":"习题","slug":"习题","link":"#习题","children":[{"level":3,"title":"有效的字母异位词","slug":"有效的字母异位词","link":"#有效的字母异位词","children":[]},{"level":3,"title":"两个数组的交集","slug":"两个数组的交集","link":"#两个数组的交集","children":[]},{"level":3,"title":"快乐数","slug":"快乐数","link":"#快乐数","children":[]},{"level":3,"title":"两数之和","slug":"两数之和","link":"#两数之和","children":[]},{"level":3,"title":"三数之和","slug":"三数之和","link":"#三数之和","children":[]},{"level":3,"title":"四数之和","slug":"四数之和","link":"#四数之和","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1699352659000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":7}]},"readingTime":{"minutes":1.88,"words":565},"filePathRelative":"zh/algorithm/leetcode/hashtable/README.md","localizedDate":"2023年10月28日","excerpt":"<h2> 哈希表的理论知识</h2>\\n<h3> 概念</h3>\\n<p>散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存储存位置的数据结构。也就是说，它通过计算出一个键值的函数，将所需查询的数据映射到表中一个位置来让人访问，这加快了查找速度。这个映射函数称做<strong>散列函数</strong>，存放记录的数组称做<strong>散列表</strong>。</p>\\n<figure><figcaption>hash table</figcaption></figure>\\n<h3> 哈希函数</h3>\\n<p>若关键字为<code>k</code>，则其值存放在<code>f(k)</code>的存储位置上。由此，不需比较便可直接取得所查记录。称这个对应关系<code>f</code>为散列函数。</p>","autoDesc":true}');export{e as data};
