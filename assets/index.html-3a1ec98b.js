import{_ as l}from"./array_memory_allocation-4e4b0990.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as s,c as d,a as e,d as t,w as i,e as _,b as a}from"./app-4905d212.js";const m={},u=_('<h2 id="about-array" tabindex="-1"><a class="header-anchor" href="#about-array" aria-hidden="true">#</a> About Array</h2><p>When memory is allocated for an array, its individual elements are adjacent, so we can access it by index.<br><img src="'+l+`" alt="Array Memory Allocation" loading="lazy"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let nums = [10, 11, 12, 13, 14, 15];

Array:   10  11  12  13  14  15
index:    0   1   2   3   4   5

assert_eq(nums[0], 10);
assert_eq(nums[5], 15);
assert_eq(nums[6], xx); // ERRORï¼Œindex out of bounds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exercise" tabindex="-1"><a class="header-anchor" href="#exercise" aria-hidden="true">#</a> Exercise</h2><h3 id="binary-search" tabindex="-1"><a class="header-anchor" href="#binary-search" aria-hidden="true">#</a> Binary Search</h3>`,5),c=e("br",null,null,-1),h=e("br",null,null,-1),f=e("br",null,null,-1),b=e("br",null,null,-1),y=e("h3",{id:"remove-element",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#remove-element","aria-hidden":"true"},"#"),a(" Remove Element")],-1),x=e("br",null,null,-1),p=e("br",null,null,-1),v=e("br",null,null,-1),g=e("h3",{id:"square-of-ordered-arrays",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#square-of-ordered-arrays","aria-hidden":"true"},"#"),a(" Square of Ordered Arrays")],-1),S=e("h3",{id:"minimum-size-subarray-sum",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#minimum-size-subarray-sum","aria-hidden":"true"},"#"),a(" Minimum Size Subarray Sum")],-1),q=e("br",null,null,-1),A=e("br",null,null,-1),k=e("h3",{id:"spiral-matrix",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spiral-matrix","aria-hidden":"true"},"#"),a(" Spiral Matrix")],-1),M=e("br",null,null,-1),R=e("h2",{id:"summary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#summary","aria-hidden":"true"},"#"),a(" Summary")],-1);function z(B,w){const r=n("RouterLink");return s(),d("div",null,[u,e("p",null,[t(r,{to:"/algorithm/leetcode/array/704_binary_search.html"},{default:i(()=>[a("704: Binary Search")]),_:1}),c,t(r,{to:"/algorithm/leetcode/array/35_search_insert_position.html"},{default:i(()=>[a("35: Search Insert Position")]),_:1}),h,t(r,{to:"/algorithm/leetcode/array/34_find_first_and_last_position_of_element_in_sorted_array.html"},{default:i(()=>[a("34: Find First and Last Position of Element in Sorted Array")]),_:1}),f,t(r,{to:"/algorithm/leetcode/array/69_sqrt_x.html"},{default:i(()=>[a("69: Sqrt(x)")]),_:1}),b,t(r,{to:"/algorithm/leetcode/array/367_valid_perfect_square.html"},{default:i(()=>[a("367: Valid Perfect Square")]),_:1})]),y,e("p",null,[t(r,{to:"/algorithm/leetcode/array/27_remove_element.html"},{default:i(()=>[a("27: Remove Element")]),_:1}),x,t(r,{to:"/algorithm/leetcode/array/26_remove_duplicates_from_sorted_array.html"},{default:i(()=>[a("26: Remove Duplicates from Sorted Array")]),_:1}),p,t(r,{to:"/algorithm/leetcode/array/283_move_zeroes.html"},{default:i(()=>[a("283: Move Zeroes")]),_:1}),v,t(r,{to:"/algorithm/leetcode/array/844_backspace_string_compare.html"},{default:i(()=>[a("844: Backspace String Compare")]),_:1})]),g,e("p",null,[t(r,{to:"/algorithm/leetcode/array/977_squares_of_a_sorted_array.html"},{default:i(()=>[a("977: Squares of a Sorted Array")]),_:1})]),S,e("p",null,[t(r,{to:"/algorithm/leetcode/array/209_minimum_size_subarray_sum.html"},{default:i(()=>[a("209: Minimum Size Subarray Sum")]),_:1}),q,t(r,{to:"/algorithm/leetcode/array/904_fruit_into_baskets.html"},{default:i(()=>[a("904: Fruit Into Baskets")]),_:1}),A,t(r,{to:"/algorithm/leetcode/array/76_minimum_window_substring.html"},{default:i(()=>[a("76: Minimum Window Substring")]),_:1})]),k,e("p",null,[t(r,{to:"/algorithm/leetcode/array/54_spiral_matrix.html"},{default:i(()=>[a("54: Spiral Matrix")]),_:1}),M,t(r,{to:"/algorithm/leetcode/array/59_spiral_matrix_ii.html"},{default:i(()=>[a("59: Spiral Matrix II")]),_:1})]),R])}const N=o(m,[["render",z],["__file","index.html.vue"]]);export{N as default};
