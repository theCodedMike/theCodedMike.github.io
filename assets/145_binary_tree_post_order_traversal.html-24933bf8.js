const e=JSON.parse(`{"key":"v-2b1c7332","path":"/algorithm/leetcode/binary_tree/145_binary_tree_post_order_traversal.html","title":"145, Binary Tree Post-order Traversal","lang":"en-US","frontmatter":{"title":"145, Binary Tree Post-order Traversal","icon":"discover","date":"2023-12-10T00:00:00.000Z","order":3,"sticky":true,"category":"binary tree","tag":["easy","stack","binary tree","depth first search"],"description":"I Problem Given the root of a binary tree, return the postorder traversal of its nodes' values. Example 1 Input: root = [1, null, 2, 3] Output: [3, 2, 1] Explanation: Example 2 Input: root = [] Output: []","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://thecodedmike.github.io/zh/algorithm/leetcode/binary_tree/145_binary_tree_post_order_traversal.html"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/algorithm/leetcode/binary_tree/145_binary_tree_post_order_traversal.html"}],["meta",{"property":"og:site_name","content":"Mike's Blog"}],["meta",{"property":"og:title","content":"145, Binary Tree Post-order Traversal"}],["meta",{"property":"og:description","content":"I Problem Given the root of a binary tree, return the postorder traversal of its nodes' values. Example 1 Input: root = [1, null, 2, 3] Output: [3, 2, 1] Explanation: Example 2 Input: root = [] Output: []"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-10T18:31:17.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"easy"}],["meta",{"property":"article:tag","content":"stack"}],["meta",{"property":"article:tag","content":"binary tree"}],["meta",{"property":"article:tag","content":"depth first search"}],["meta",{"property":"article:published_time","content":"2023-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-10T18:31:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"145, Binary Tree Post-order Traversal\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-10T18:31:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"I Problem","slug":"i-problem","link":"#i-problem","children":[]},{"level":2,"title":"II Solution","slug":"ii-solution","link":"#ii-solution","children":[{"level":3,"title":"Approach 1: Recursion","slug":"approach-1-recursion","link":"#approach-1-recursion","children":[]},{"level":3,"title":"Approach 2: Iteration","slug":"approach-2-iteration","link":"#approach-2-iteration","children":[]}]}],"git":{"createdTime":1702233077000,"updatedTime":1702233077000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":1}]},"readingTime":{"minutes":2.56,"words":768},"filePathRelative":"algorithm/leetcode/binary_tree/145_binary_tree_post_order_traversal.md","localizedDate":"December 10, 2023","excerpt":"<h2> I Problem</h2>\\n<p>Given the <code>root</code> of a binary tree, return <em>the postorder traversal of its nodes' values</em>.</p>\\n<p><strong>Example 1</strong><br>\\n<br>\\nInput: root = [1, null, 2, 3]<br>\\nOutput: [3, 2, 1]<br>\\nExplanation:</p>\\n<p><strong>Example 2</strong><br>\\nInput: root = []<br>\\nOutput: []</p>","autoDesc":true}`);export{e as data};
