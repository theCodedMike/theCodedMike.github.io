import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c as d,a as e,d as r,w as l,e as s,b as t}from"./app-b646baab.js";const _={},h=s(`<h2 id="数组的理论知识" tabindex="-1"><a class="header-anchor" href="#数组的理论知识" aria-hidden="true">#</a> 数组的理论知识</h2><p>当给数组分配内存时，数组中的各个元素是相邻的，所以可以通过下标来访问其中的某个元素。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let nums = [10, 11, 12, 13, 14, 15];

Array:   10  11  12  13  14  15
index:    0   1   2   3   4   5

assert_eq(nums[0], 10);
assert_eq(nums[5], 15);
assert_eq(nums[6], xx); // ERROR，index out of bounds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二分查找" tabindex="-1"><a class="header-anchor" href="#二分查找" aria-hidden="true">#</a> 二分查找</h3>`,4),c=e("br",null,null,-1),u=e("br",null,null,-1),m=e("br",null,null,-1),f=e("br",null,null,-1),b=e("h3",{id:"移除元素",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#移除元素","aria-hidden":"true"},"#"),t(" 移除元素")],-1),v=e("br",null,null,-1),x=e("br",null,null,-1),p=e("br",null,null,-1),g=e("h3",{id:"有序数组的平方",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#有序数组的平方","aria-hidden":"true"},"#"),t(" 有序数组的平方")],-1),y=e("h3",{id:"长度最小的子数组",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#长度最小的子数组","aria-hidden":"true"},"#"),t(" 长度最小的子数组")],-1),z=e("br",null,null,-1),k=e("br",null,null,-1),q=e("h3",{id:"螺旋矩阵",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#螺旋矩阵","aria-hidden":"true"},"#"),t(" 螺旋矩阵")],-1),R=e("br",null,null,-1),w=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),t(" 总结")],-1);function N(V,B){const a=i("RouterLink");return o(),d("div",null,[h,e("p",null,[r(a,{to:"/zh/algorithm/leetcode/array/704_binary_search.html"},{default:l(()=>[t("704: 二分查找")]),_:1}),c,r(a,{to:"/zh/algorithm/leetcode/array/35_search_insert_position.html"},{default:l(()=>[t("35: 搜索插入位置")]),_:1}),u,r(a,{to:"/zh/algorithm/leetcode/array/34_find_first_and_last_position_of_element_in_sorted_array.html"},{default:l(()=>[t("34: 在排序数组中查找元素的第一个和最后一个位置")]),_:1}),m,r(a,{to:"/zh/algorithm/leetcode/array/69_sqrt_x.html"},{default:l(()=>[t("69: x的平方根")]),_:1}),f,r(a,{to:"/zh/algorithm/leetcode/array/367_valid_perfect_square.html"},{default:l(()=>[t("367: 有效的完全平方数")]),_:1})]),b,e("p",null,[r(a,{to:"/zh/algorithm/leetcode/array/27_remove_element.html"},{default:l(()=>[t("27: 移除元素")]),_:1}),v,r(a,{to:"/zh/algorithm/leetcode/array/26_remove_duplicates_from_sorted_array.html"},{default:l(()=>[t("26: 删除有序数组中的重复项")]),_:1}),x,r(a,{to:"/zh/algorithm/leetcode/array/283_move_zeroes.html"},{default:l(()=>[t("283: 移动零")]),_:1}),p,r(a,{to:"/zh/algorithm/leetcode/array/844_backspace_string_compare.html"},{default:l(()=>[t("844: 比较含退格的字符串")]),_:1})]),g,e("p",null,[r(a,{to:"/zh/algorithm/leetcode/array/977_squares_of_a_sorted_array.html"},{default:l(()=>[t("977: 有序数组的平方")]),_:1})]),y,e("p",null,[r(a,{to:"/zh/algorithm/leetcode/array/209_minimum_size_subarray_sum.html"},{default:l(()=>[t("209: 长度最小的子数组")]),_:1}),z,r(a,{to:"/zh/algorithm/leetcode/array/904_fruit_into_baskets.html"},{default:l(()=>[t("904: 水果成篮")]),_:1}),k,r(a,{to:"/zh/algorithm/leetcode/array/76_minimum_window_substring.html"},{default:l(()=>[t("76: 最小覆盖子串")]),_:1})]),q,e("p",null,[r(a,{to:"/zh/algorithm/leetcode/array/54_spiral_matrix.html"},{default:l(()=>[t("54: 螺旋矩阵")]),_:1}),R,r(a,{to:"/zh/algorithm/leetcode/array/59_spiral_matrix_ii.html"},{default:l(()=>[t("59: 螺旋矩阵II")]),_:1})]),w])}const I=n(_,[["render",N],["__file","index.html.vue"]]);export{I as default};
