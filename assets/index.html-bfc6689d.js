const e=JSON.parse('{"key":"v-7eea821d","path":"/zh/algorithm/leetcode/greedy/","title":"贪心算法","lang":"zh-CN","frontmatter":{"title":"贪心算法","icon":"discover","date":"2024-02-25T00:00:00.000Z","dir":{"order":9},"category":"leetcode","tag":"greedy","sticky":false,"description":"贪心算法 贪心算法（greedy algorithm，又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，算法得到的是在某种意义上的局部最优解。 贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择。 贪心算法一般分为如下四步： 将问题分解为若干个子问题 找出适合的贪心策略 求解每一个子问题的最优解 将局部最优解堆叠成全局最优解","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://thecodedmike.github.io/algorithm/leetcode/greedy/"}],["meta",{"property":"og:url","content":"https://thecodedmike.github.io/zh/algorithm/leetcode/greedy/"}],["meta",{"property":"og:site_name","content":"Mike的博客"}],["meta",{"property":"og:title","content":"贪心算法"}],["meta",{"property":"og:description","content":"贪心算法 贪心算法（greedy algorithm，又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，算法得到的是在某种意义上的局部最优解。 贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择。 贪心算法一般分为如下四步： 将问题分解为若干个子问题 找出适合的贪心策略 求解每一个子问题的最优解 将局部最优解堆叠成全局最优解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-08T10:26:54.000Z"}],["meta",{"property":"article:author","content":"Mike"}],["meta",{"property":"article:tag","content":"greedy"}],["meta",{"property":"article:published_time","content":"2024-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-08T10:26:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"贪心算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-08T10:26:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mike\\"}]}"]]},"headers":[{"level":2,"title":"贪心算法","slug":"贪心算法","link":"#贪心算法","children":[]},{"level":2,"title":"习题","slug":"习题","link":"#习题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1695811035000,"updatedTime":1709893614000,"contributors":[{"name":"mike","email":"lixiaofeng1115@outlook.com","commits":9}]},"readingTime":{"minutes":1.17,"words":350},"filePathRelative":"zh/algorithm/leetcode/greedy/README.md","localizedDate":"2024年2月25日","excerpt":"<h2> 贪心算法</h2>\\n<p><strong>贪心算法</strong>（greedy algorithm，又称<strong>贪婪算法</strong>）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，算法得到的是在某种意义上的局部最优解。</p>\\n<p>贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择。</p>\\n<p>贪心算法一般分为如下四步：</p>\\n<ul>\\n<li>将问题分解为若干个子问题</li>\\n<li>找出适合的贪心策略</li>\\n<li>求解每一个子问题的最优解</li>\\n<li>将局部最优解堆叠成全局最优解</li>\\n</ul>","autoDesc":true}');export{e as data};
